{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8c625dc488c69fcd2f74","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./src/pannellum/js/libpannellum.js","webpack:///./src/pannellum/js/pannellum.js","webpack:///./src/pannellum/js/RequestAnimationFrame.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./src/index.js","webpack:///./src/elements/Pannellum.js","webpack:///./src/elements/PannellumVideo.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js","webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/mux.js/lib/aac/probe.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./src/pannellum/js/videojs-pannellum-plugin.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Stream","init","listeners","on","type","listener","concat","off","index","indexOf","slice","splice","trigger","callbacks","length","args","arguments","push","apply","dispose","pipe","destination","data","flushSource","flush","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","global","win","window","findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","path","size","end","subresults","results","byteLength","subarray","buffer","result","String","fromCharCode","reduce","trak","tkhd","version","id","mdhd","fragment","trafs","baseTimes","map","traf","tfhd","scale","tfdt","Math","pow","Infinity","min","isFinite","videoTrackIds","forEach","hdlrs","tkhds","hdlr","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","isLikelyAacData","arrayEquals","sumFrameByteLengths","mp4","frameUtils","trackDecodeInfo","m2ts","AdtsStream","H264Stream","AacStream","coneOfSilence","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","charCodeAt","a","b","array","sum","track","options","adtsFrames","sequenceNumber","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","collectDtsInfo","prop","setEarliestDts","earliestDts","timelineStartInfo","baseMediaDecodeTime","setVideoBaseMediaDecodeTime","setAudioAppendStart","timestamp","frames","moof","mdat","boxes","trimAdtsFramesByEarliestDts_","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","prefixWithSilence_","samples","generateSampleTable_","concatenateFrameData_","Uint8Array","set","clearDtsInfo","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","audioTsToVideoTs","samplerate","ceil","max","floor","ONE_SECOND_IN_TS","videoTsToAudioTs","minSegmentDts","filter","currentFrame","dts","minSegmentPts","duration","dataOffset","config","pps","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","nalUnitType","sps","gopForFusion","gops","shift","resetStream_","groupNalsIntoFrames","groupFramesIntoGops","keyFrame","getGopForFusion_","unshift","nalCount","pts","extendFirstKeyFrame","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","pop","generateSampleTable","concatenateNalData","undefined","dtsDistance","nearestGopObj","currentGop","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","text","audioTrack","caption","id3","initSegment","offset","event","captions","captionStreams","info","timelineStartPts","startPts","endTime","endPts","stream","cueTime","dispatchType","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","MetadataStream","aacStream","audioTimestampRolloverStream","TimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","frame","setTimestamp","timeStamp","audioSegmentStream","codec","bind","setupTsPipeline","packetStream","TransportPacketStream","parseStream","TransportParseStream","elementaryStream","ElementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","CaptionStream","tracks","videoSegmentStream","setBaseMediaDecodeTime","discontinuity","reset","isAac","resetCaptions","libpannellum","document","Renderer","container","program","gl","vs","fs","fallbackImgSize","world","vtmps","pose","image","imageType","dynamic","texCoordBuffer","cubeVertBuf","cubeVertTexCoordBuf","cubeVertIndBuf","globalParams","canvas","createElement","multiresNodeSort","level","multiresNodeRenderSort","diff","MultiresNode","vertices","side","x","y","replace","testMultiresNode","rotPersp","node","pitch","yaw","hfov","v","check1","checkInView","check2","check3","check4","testX","testY","checkSquareInView","z","r","sqrt","theta","asin","ydiff","atan2","PI","abs","acos","sin","cos","inCurrent","k","nodeCache","nodeCacheTimestamp","currentNodes","cubeSize","cubeResolution","maxLevel","numTiles","invTileResolution","doubleTileSize","tileResolution","lastTileSize","f","ntmp","children","f1","f2","f3","i1","i2","i3","fullpath","j","rotateMatrix","angle","axis","transposeMatrix4","style","width","height","appendChild","_image","_imageType","_dynamic","haov","vaov","voffset","callback","params","console","log","detachShader","deleteShader","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","texture","deleteTexture","deleteProgram","cubeImgWidth","faceMissing","fillMissingFaces","imgSize","nbytes","imageArray","Uint8ClampedArray","rgb","backgroundColor","backgroundSquare","ImageData","navigator","userAgent","toLowerCase","match","getContext","alpha","depth","getError","handleWebGLError1286","documentElement","appVersion","removeChild","className","basePath","fallbackPath","sides","loaded","onLoad","faceCanvas","faceContext","drawImage","imgData","getImageData","putImageData","incLoaded","faceImg","Image","crossOrigin","onload","onerror","src","encodeURI","extension","maxWidth","getParameter","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","horizonPitch","horizonRoll","glBindType","TEXTURE_2D","viewport","drawingBufferWidth","drawingBufferHeight","createShader","VERTEX_SHADER","vertexSrc","vMulti","shaderSource","compileShader","FRAGMENT_SHADER","fragmentSrc","fragEquirectangular","TEXTURE_CUBE_MAP","fragCube","fragMulti","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","drawInProgress","color","clearColor","clear","COLOR_BUFFER_BIT","texCoordLocation","getAttribLocation","enableVertexAttribArray","createBuffer","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","aspectRatio","getUniformLocation","uniform1f","psi","h","vo","rot","uniform4fv","createTexture","bindTexture","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGB","UNSIGNED_BYTE","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","vertPosLocation","Uint16Array","perspUniform","cubeUniform","err","destroy","contains","getExtension","loseContext","resize","pixelRatio","devicePixelRatio","clientWidth","clientHeight","setPose","render","focal","roll","orig_pitch","orig_yaw","w","roll_adj","vfov","atan","tan","drawArrays","TRIANGLES","perspMatrix","aspect","znear","zfar","fovy","makePersp","newLevel","checkZoom","matrix","uniformMatrix4fv","sort","removed","pendingTextureRequests","textureLoad","setTimeout","processNextTile","textureLoaded","drawElements","UNSIGNED_SHORT","multiresDraw","returnImage","toDataURL","transforms","u","zoom","transform","faces","keys","face","querySelector","webkitTransform","isLoading","getCanvas","loadTexture","cacheTop","textureImageCache","TextureImageLoader","loadFn","img","tex","til","req","releaseTextureImageLoader","addEventListener","_crossOrigin","vpp","applyRotPerspToVec","winX","winY","winZ","ret","round","join","fragEquiCubeBase","renderer","imagetype","pannellum","Viewer","initialConfig","preview","panoImage","prevTime","autoRotateStart","origHfov","origPitch","_this","isUserInteracting","latestInteraction","Date","now","onPointerDownPointerX","onPointerDownPointerY","onPointerDownPointerDist","onPointerDownYaw","onPointerDownPitch","keysDown","Array","fullscreenActive","error","listenersAdded","speed","animating","orientation","orientationYawOffset","autoRotateSpeed","animatedMove","externalEventListeners","specifiedPhotoSphereExcludes","update","hotspotsCreated","defaultConfig","minHfov","maxHfov","minPitch","maxPitch","minYaw","maxYaw","vOffset","autoRotate","autoRotateInactivityDelay","autoRotateStopDelay","northOffset","showFullscreenCtrl","doubleClickZoom","keyboardZoom","mouseZoom","showZoomCtrl","autoLoad","showControls","orientationOnByDefault","hotSpotDebug","avoidShowingBackground","animationTimingFunction","t","draggable","disableKeyboardCtrl","touchPanSpeedCoeffFactor","capturedKeyNumbers","loadButtonLabel","loadingLabel","bylineLabel","noPanoramaError","fileAccessError","malformedURLError","iOS8WebGLError","genericWebGLError","textureSizeError","unknownError","getElementById","classList","add","tabIndex","uiContainer","renderContainer","dragFix","aboutMsg","innerHTML","aboutMessage","pos","mousePosition","left","top","clearTimeout","t1","t2","display","opacity","preventDefault","infoDisplay","hotSpotDebugIndicator","title","author","load","box","boxp","lbox","lbar","lbarFill","msg","errorMsg","controls","processOptions","zoomIn","setHfov","animateInit","zoomOut","fullscreen","toggleFullscreen","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","e","stopOrientation","startOrientation","stopPropagation","orientationSupport","startOrientationIfSupported","DeviceOrientationEvent","deviceOrientationTest","removeEventListener","beta","gamma","compass","div","getElementsByTagName","JSON","parse","stringify","multiRes","test","panorama","anError","strings","itemsToLoad","onImageLoad","onError","href","target","textContent","outerHTML","cubeMap","absoluteURL","sanitizeURL","URL","revokeObjectURL","xhr","XMLHttpRequest","onloadend","status","reader","response","FileReader","flagIndex","start","ignoreGPanoXMP","xmpData","substring","getTag","tag","Number","xmp","fullWidth","croppedWidth","fullHeight","croppedHeight","topPixels","heading","createObjectURL","readAsBinaryString","readAsText","onprogress","lengthComputable","unit","numerator","denominator","percent","toFixed","open","responseType","setRequestHeader","withCredentials","send","remove","url","RegExp","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","onDocumentDoubleClick","onFullScreenChange","onDocumentResize","onDocumentKeyPress","onDocumentKeyUp","clearKeys","pointerAction","touchAction","onDocumentPointerDown","onDocumentPointerMove","onDocumentPointerUp","onDocumentTouchStart","onDocumentTouchMove","onDocumentTouchEnd","pointerEnabled","renderInitCallback","renderInit","fireEvent","bounds","getBoundingClientRect","clientX","clientY","focus","coords","mouseEventToCoords","stopAnimation","lookAt","canvasWidth","canvasHeight","pos0","targetTouches","pos1","clientDist","touchmovePanSpeedCoeff","firstScene","mergeConfig","default","pointerIDs","pointerCoordinates","pointerType","pointerId","defined","wheelDeltaY","wheelDelta","detail","keynumber","which","keycode","changeKey","value","keyChanged","performance","animateMove","normTime","startPosition","endPosition","callbackArgs","animate","tmpyaw","hoffcut","hfov2","vfov2","transposed","yawRange","pitchRange","isNaN","renderHotSpots","onRender","requestAnimationFrame","newTime","isKeyDown","prevPitch","prevYaw","prevZoom","timeDiff","yawDiff","maxSpeed","keyRepeat","autoRotateStartTime","Quaternion","computeQuaternion","quaternion","taitBryanToQuaternion","multiply","orientationListener","q","toEulerAngles","sceneFadeDuration","fadeImg","hotSpots","createHotSpot","createHotSpots","hs","cssClass","escapeHTML","span","video","paddingTop","sceneId","onclick","ontouchend","clicked","loadScene","targetPitch","targetYaw","targetHfov","createTooltipFunc","createTooltipArgs","scrollWidth","marginLeft","offsetWidth","marginTop","scrollHeight","clickHandlerFunc","clickHandlerArgs","renderHotSpot","hsPitchSin","hsPitchCos","configPitchSin","configPitchCos","yawCos","visibility","yawSin","hfovTan","coord","rollSin","rollCos","offsetHeight","MozTransform","photoSphereExcludes","scenes","scene","isPreview","backgroundImage","key","previewTitle","previewAuthor","link","message","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","isFullScreen","innerWidth","screen","innerHeight","mozFullScreen","webkitIsFullScreen","msFullscreenElement","constrainHfov","newHfov","fadeDone","workingPitch","workingYaw","workingHfov","transition","current","parentNode","destroyHotSpots","split","trim","isLoaded","Boolean","getPitch","setPitch","animated","getPitchBounds","setPitchBounds","getYaw","setYaw","getYawBounds","setYawBounds","getHfov","getHfovBounds","setHfovBounds","getNorthOffset","setNorthOffset","getHorizonRoll","setHorizonRoll","getHorizonPitch","setHorizonPitch","startAutoRotate","stopAutoRotate","getRenderer","setUpdate","bool","getScene","addScene","removeScene","getConfig","getContainer","addHotSpot","removeHotSpot","hotSpotId","isOrientationSupported","isOrientationActive","viewer","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","__WEBPACK_IMPORTED_MODULE_1_global_document__","__WEBPACK_IMPORTED_MODULE_1_global_document___default","__WEBPACK_IMPORTED_MODULE_2_tsml__","__WEBPACK_IMPORTED_MODULE_2_tsml___default","__WEBPACK_IMPORTED_MODULE_3_xhr__","__WEBPACK_IMPORTED_MODULE_3_xhr___default","__WEBPACK_IMPORTED_MODULE_4_videojs_vtt_js__","__WEBPACK_IMPORTED_MODULE_4_videojs_vtt_js___default","__WEBPACK_IMPORTED_MODULE_5_safe_json_parse_tuple__","__WEBPACK_IMPORTED_MODULE_5_safe_json_parse_tuple___default","__WEBPACK_IMPORTED_MODULE_6_url_toolkit__","__WEBPACK_IMPORTED_MODULE_6_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_7_m3u8_parser__","__WEBPACK_IMPORTED_MODULE_8_mpd_parser__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_mp4_probe__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_mp4_probe___default","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_mp4__","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_tools_ts_inspector_js__","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_tools_ts_inspector_js___default","__WEBPACK_IMPORTED_MODULE_12_aes_decrypter__","history","logByType","lvl","levels","lvlRegExp","toUpperCase","fn","isArray","_len","_key","all","debug","warn","DEFAULT","Error","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","_typeof","Symbol","iterator","obj","constructor","classCallCheck","instance","Constructor","TypeError","inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","taggedTemplateLiteralLoose","raw","toString","isObject","each","assign","sources","source","isPlain","computedStyle","el","getComputedStyle","cs","_templateObject","isNonBlankString","str","throwIfWhitespace","isReal","isEl","nodeType","isInFrame","parent","createQuerier","method","selector","context","ctx","createEl","tagName","properties","attributes","content","getOwnPropertyNames","propName","val","setAttribute","attrName","appendContent","innerText","prependTo","child","firstChild","insertBefore","hasClass","classToCheck","addClass","classToAdd","removeClass","classToRemove","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","onselectstart","unblockTextSelection","rect","parseFloat","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","position","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","normalizeContent","createTextNode","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","doc","charCode","keyCode","_supportsPassive","opts","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","readyState","createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","last","debounce","immediate","timeout","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","EVENT_MAP","queueTrigger","Map","oldTimeout","delete","isEvented","eventBusEl_","every","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","exec","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","acc","cues","cue","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","props","addToBody","host","protocol","details","location","getAbsoluteURL","getFileExtension","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","loadTrack","uri","cors","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","poster","setSrc","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","trackList","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","implementation","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","calculateDistance","stepBack","stepForward","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","isFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","catch","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","PromiseClass","Promise","resolve","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this10","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this11","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this12","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","Function","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","classCallCheck$1","createClass$1","protoProps","staticProps","inherits$1","possibleConstructorReturn$1","slicedToArray$1","arr","_arr","_n","_d","_e","_s","done","sliceIterator","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateMaster","media","playlist","playlists","segments","mediaSequence","mergedPlaylist","updateSegments","segment","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","targetDuration","PlaylistLoader","srcUrl","hls","getPrototypeOf","hls_","playlistRequestError","haveMetadata","xhr$$1","startingState","responseText","manifest","media_","endList","mediaUpdateTimeout","stopRequest","oldRequest","onreadystatechange","abort","mediaChange","started","isFinalRendition","delay","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","intervalDuration","endSequence","expired","backward","forward","precise","backwardDuration","forwardDuration","totalDuration","sumDurations","startIndex","endIndex","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","BANDWIDTH","MAX_VALUE","Playlist","seekableStart","seekableEnd","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","headers","responseHeaders","timedout","aborted","statusCode","originalAbort","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","ArrayBuffer","isView","bytes","initSegmentId","byterange","hexDump","utils","tagDump","textRanges","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","Blob","blob","getBlob","TransmuxWorker","document$$1","dinf","esds","ftyp","mfhd","minf","moov","mvex","mvhd","mdia","sdtp","stbl","stsd","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","trackFragments","flags","dependsOn","isDependedOn","hasRedundancy","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","_findBox","mp4Generator","fileType","movie","toUnsigned$1","probe","sampleForFrame","currentNal","baseDataOffset","nalsByteLength","numberOfNals","maxSegmentDts","maxSegmentPts","captionPacketParser","payloadType","payloadSize","sei","userData","count","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","streamTypes","handleRollover","reference","direction","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","decodeURIComponent","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","bufferSize","chunk","frameStart","frameSize","dataAlignmentIndicator","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","timed-metadata","streamType","pid","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetFlushable","packetData","pes","ptsDtsFlags","packetLength","PAT_PID","MP2T_PACKET_LENGTH","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","NalByteStream","parseId3TagSize","header","byteIndex","returnSize","parseAdtsSize","lowThree","middle","bytesLeft","tempLength","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","highPrefix","lowPrefix","zeroFill","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","sampleRate","ONE_SECOND_IN_TS$2","inspectMp4","_textifyMp","transmuxer","parseType$1","parseMp4Date","parseSampleFlags","parse$$1","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","escape","nals","avcStream","avcView","nalParse","modificationTime","streamDescriptor","Uint32Array","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","entries","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","mp4Inspector","inspect","ab","textify","inspectedMp4","indent","prefix","byte","line","parseTfdt","parseHdlr","parseTfhd","parseTrun","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","classCallCheck$$1","createClass$$1","MessageHandlers","initArray","typedArray","action","gopInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","parsed","codecCount","makeMimeTypeString","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","byterangeEnd","Range","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","endOfAllRequests","worstError","prev","getMostImportantError","encryptedBytes","decryptionHandler","requestId","decrypted","encrypted","iv","decryptSegment","handleProgress","progressFn","progressEvent","stats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","detectEndOfStream","segmentIndex","appendedLastSegment","finite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","segmentInfo","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","endOfStream","timeline","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","currentTimeline","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","timingInfo","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","resolution","RESOLUTION","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","dateTimeObject","segmentStart","distance","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","dtsTime","accuracy","mediaIndexDiff","Decrypter$1","possibleConstructorReturn$$1","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","inherits$$1","processJob_","job","ntoh","word","Decrypter$$1","initVector","step","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","decrypt$$1","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","_settings$mediaTypes$2","forced","_settings$mediaTypes$3","instreamId","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","fastChangeFunction","masterPlaylistController_","fastQualityChange_","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","vhs","source_","Hls$1","Decrypter","AsyncStream","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","smoothQualityChange_","pauseLoading","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","get$$1","receiver","get$2","HlsSourceHandler","supportedType","__webpack_exports__","g","eval","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","baseURLPath","newPath","lastIndexOf","parts","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","__WEBPACK_IMPORTED_MODULE_0__elements_Pannellum__","__WEBPACK_IMPORTED_MODULE_1__elements_PannellumVideo__","Pannellum","_classCallCheck","_possibleConstructorReturn","_PureComponent","renderImage","hotspots","hotspotArray","hotspot","substr","tooltip","hotspotTooltip","tooltipArg","handleClickHotspot","handleClickArg","jsonConfig","hotspotDebug","onScenechange","onScenechangefadedone","onErrorcleared","onMousedown","onMouseup","onTouchstart","onTouchend","componentDidMount","hotSpotDiv","hDiv","outDiv","inDiv","getViewer","forceRender","componentDidUpdate","prevProps","prevState","snapshot","_props","divStyle","__WEBPACK_IMPORTED_MODULE_0_react___default","ref","imageNode","PureComponent","defaultProps","Hotspot","PannellumVideo","renderVideo","videoNode","cuurentHS","pnlmViewer","componentWillUnmount","data-vjs-player","doccy","topLevel","minDoc","clean","sa","isFunction","parseHeaders","xtend","initParams","createXHR","_createXHR","called","errorFunc","evt","timeoutTimer","failureResponse","loadFunc","useXDR","responseXML","firefoxBugTakenEffect","getXml","isJson","getBody","rawRequest","getAllResponseHeaders","XDomainRequest","onabort","ontimeout","username","password","isEmpty","beforeSend","forEachArray","alert","confirm","prompt","isCallable","toStr","thisArg","len","forEachString","forEachObject","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","region","alt","vals","vals0","integer","lineAlign","snapToLines","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","toMove","overlaps","getSimpleBoxPosition","decode","encodeURIComponent","convertCueToDOMTree","cuetext","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","SyntaxError","getCueAsHTML","scrollSetting","up","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","reviver","_extends","LineStream","nextNewline","parseAttributes","ParseStream","customParsers","tagType","number","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","dateTimeString","IV","PRECISE","addParser","expression","customType","dataParser","lineStream","uris","currentUri","currentMap","defaultMediaGroups","allowCache","entry","rendition","allow-cache","endlist","inf","METHOD","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","CHARACTERISTICS","FORCED","program-date-time","targetduration","totalduration","timeOffset","cue-out","cue-out-cont","cue-in","cueIn","comment","custom","parseUTCTiming","__WEBPACK_IMPORTED_MODULE_0_url_toolkit__","__WEBPACK_IMPORTED_MODULE_0_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_1_global_window__","__WEBPACK_IMPORTED_MODULE_1_global_window___default","formatVideoPlaylist","_ref3","_attributes3","periodIndex","merge","objects","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","sourceDuration","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","repeat","segmentTime","nextS","flatten","lists","segmentRange","static","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","template","base","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","_attributes","formatAudioPlaylist","subs","_attributes2","organizeVttPlaylists","toM3u8","UTCTimingNode","parseUTCTimingScheme","StreamTypes","m2tsStreamTypes","ExpGolomb","textifyMp4","parseAudioPes_","pesType","pusi","endLoop","parsePesType","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePsi_","baseTimestamp","audioCount","parseAacTimestamp","parseSampleRate","audioTimescale","inspectAac_","audioBaseTimestamp","ptsTime","videoBaseTimestamp","adjustTimestamp_","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","__WEBPACK_IMPORTED_MODULE_0_pkcs7__","createClass","unpad","__WEBPACK_IMPORTED_MODULE_0_video_js__","vid","pnlmContainer"],"mappings":"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","file":"pannellum-react.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PannellumReact\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"PannellumReact\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8c625dc488c69fcd2f74","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = 1\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = 2\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = 3\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n// Helper functions\nvar\n  isLikelyAacData,\n  arrayEquals,\n  sumFrameByteLengths;\n\nisLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\narrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nsumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.prefixWithSilence_(track, frames);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = this.generateSampleTable_(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(this.concatenateFrameData_(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n\n  // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n  this.prefixWithSilence_ = function(track, frames) {\n    var\n      baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n    // determine frame clock duration based on sample rate, round up to avoid overfills\n    frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration =\n        baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n      // number of full frames in the audio gap\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    }\n\n    // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n    if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = coneOfSilence[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      frames.splice(i, 0, {\n        data: silentFrame\n      });\n    }\n\n    track.baseMediaDecodeTime -=\n      Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n  };\n\n  // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n  this.trimAdtsFramesByEarliestDts_ = function(adtsFrames) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    }\n\n    // We will need to recalculate the earliest segment Dts\n    track.minSegmentDts = Infinity;\n\n    return adtsFrames.filter(function(currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      }\n      // Otherwise, discard it\n      return false;\n    });\n  };\n\n  // generate the track's raw mdat data from an array of frames\n  this.generateSampleTable_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  };\n\n  // generate the track's sample table from an array of frames\n  this.concatenateFrameData_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets into the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = (caption.startPts - timelineStartPts);\n    caption.startTime /= 90e3;\n    caption.endTime = (caption.endPts - timelineStartPts);\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = (id3.pts - timelineStartPts);\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  }\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    this.baseMediaDecodeTime = baseMediaDecodeTime;\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/transmuxer.js\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 5\n// module chunks = 0","/*\n * libpannellum - A WebGL and CSS 3D transform based Panorama Renderer\n * Copyright (c) 2012-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.libpannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama renderer.\n * @constructor\n * @param {HTMLElement} container - The container element for the renderer.\n */\n  function Renderer(container) {\n    var canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = '100%';\n    container.appendChild(canvas);\n\n    var program, gl, vs, fs;\n    var fallbackImgSize;\n    var world;\n    var vtmps;\n    var pose;\n    var image, imageType, dynamic;\n    var texCoordBuffer, cubeVertBuf, cubeVertTexCoordBuf, cubeVertIndBuf;\n    var globalParams;\n\n    /**\n     * Initialize renderer.\n     * @memberof Renderer\n     * @instance\n     * @param {Image|Array|Object} image - Input image; format varies based on\n     *      `imageType`. For `equirectangular`, this is an image; for\n     *      `cubemap`, this is an array of images for the cube faces in the\n     *      order [+z, +x, -z, -x, +y, -y]; for `multires`, this is a\n     *      configuration object.\n     * @param {string} imageType - The type of the image: `equirectangular`,\n     *      `cubemap`, or `multires`.\n     * @param {boolean} dynamic - Whether or not the image is dynamic (e.g. video).\n     * @param {number} haov - Initial horizontal angle of view.\n     * @param {number} vaov - Initial vertical angle of view.\n     * @param {number} voffset - Initial vertical offset angle.\n     * @param {function} callback - Load callback function.\n     * @param {Object} [params] - Other configuration parameters (`horizonPitch`, `horizonRoll`, `backgroundColor`).\n     */\n    this.init = function(_image, _imageType, _dynamic, haov, vaov, voffset, callback, params) {\n      // Default argument for image type\n      if (_imageType === undefined)\n      {_imageType = 'equirectangular';}\n\n      if (_imageType != 'equirectangular' && _imageType != 'cubemap' &&\n            _imageType != 'multires') {\n        console.log('Error: invalid image type specified!');\n        throw { type: 'config error' };\n      }\n\n      imageType = _imageType;\n      image = _image;\n      dynamic = _dynamic;\n      globalParams = params || {};\n\n      // Clear old data\n      if (program) {\n        if (vs) {\n          gl.detachShader(program, vs);\n          gl.deleteShader(vs);\n        }\n        if (fs) {\n          gl.detachShader(program, fs);\n          gl.deleteShader(fs);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        if (program.texture)\n        {gl.deleteTexture(program.texture);}\n        if (program.nodeCache)\n        {for (var i = 0; i < program.nodeCache.length; i++)\n          {gl.deleteTexture(program.nodeCache[i].texture);}}\n        gl.deleteProgram(program);\n        program = undefined;\n      }\n      pose = undefined;\n\n      var s;\n      var faceMissing = false;\n      var cubeImgWidth;\n      if (imageType == 'cubemap') {\n        for (s = 0; s < 6; s++) {\n          if (image[s].width > 0) {\n            if (cubeImgWidth === undefined)\n            {cubeImgWidth = image[s].width;}\n            if (cubeImgWidth != image[s].width)\n            {console.log('Cube faces have inconsistent widths: ' + cubeImgWidth + ' vs. ' + image[s].width);}\n          } else\n          {faceMissing = true;}\n        }\n      }\n      function fillMissingFaces(imgSize) {\n        if (faceMissing) { // Fill any missing fallback/cubemap faces with background\n          var nbytes = imgSize * imgSize * 4; // RGB, plus non-functional alpha\n          var imageArray = new Uint8ClampedArray(nbytes);\n          var rgb = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n          rgb[0] *= 255;\n          rgb[1] *= 255;\n          rgb[2] *= 255;\n          // Maybe filling could be done faster, see e.g. https://stackoverflow.com/questions/1295584/most-efficient-way-to-create-a-zero-filled-javascript-array\n          for (var i = 0; i < nbytes; i++) {\n            imageArray[i++] = rgb[0];\n            imageArray[i++] = rgb[1];\n            imageArray[i++] = rgb[2];\n          }\n          var backgroundSquare = new ImageData(imageArray, imgSize, imgSize);\n          for (s = 0; s < 6; s++) {\n            if (image[s].width == 0)\n            {image[s] = backgroundSquare;}\n          }\n        }\n      }\n        \n      // This awful browser specific test exists because iOS 8/9 and IE 11\n      // don't display non-power-of-two cubemap textures but also don't\n      // throw an error (tested on an iPhone 5c / iOS 8.1.3 / iOS 9.2 /\n      // iOS 10.3.1).\n      // Therefore, the WebGL context is never created for these browsers for\n      // NPOT cubemaps, and the CSS 3D transform fallback renderer is used\n      // instead.\n      if (!(imageType == 'cubemap' &&\n            (cubeImgWidth & (cubeImgWidth - 1)) !== 0 &&\n            (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/) ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./)))) {\n        // Enable WebGL on canvas\n        if (!gl)\n        {gl = canvas.getContext('experimental-webgl', { alpha: false, depth: false });}\n        if (gl && gl.getError() == 1286)\n        {handleWebGLError1286();}\n      }\n        \n      // If there is no WebGL, fall back to CSS 3D transform renderer.\n      // This will discard the image loaded so far and load the fallback image.\n      // While browser specific tests are usually frowned upon, the\n      // fallback viewer only really works with WebKit/Blink and IE 10/11\n      // (it doesn't work properly in Firefox).\n      if (!gl && ((imageType == 'multires' && image.hasOwnProperty('fallbackPath')) ||\n            imageType == 'cubemap') &&\n            ('WebkitAppearance' in document.documentElement.style ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./) ||\n            navigator.appVersion.indexOf('MSIE 10') !== -1)) {\n        // Remove old world if it exists\n        if (world) {\n          container.removeChild(world);\n        }\n            \n        // Initialize renderer\n        world = document.createElement('div');\n        world.className = 'pnlm-world';\n            \n        // Add images\n        var path;\n        if (image.basePath) {\n          path = image.basePath + image.fallbackPath;\n        } else {\n          path = image.fallbackPath;\n        }\n        var sides = ['f', 'r', 'b', 'l', 'u', 'd'];\n        var loaded = 0;\n        var onLoad = function() {\n          // Draw image on canvas\n          var faceCanvas = document.createElement('canvas');\n          faceCanvas.className = 'pnlm-face pnlm-' + sides[this.side] + 'face';\n          world.appendChild(faceCanvas);\n          var faceContext = faceCanvas.getContext('2d');\n          faceCanvas.style.width = this.width + 4 + 'px';\n          faceCanvas.style.height = this.height + 4 + 'px';\n          faceCanvas.width = this.width + 4;\n          faceCanvas.height = this.height + 4;\n          faceContext.drawImage(this, 2, 2);\n          var imgData = faceContext.getImageData(0, 0, faceCanvas.width, faceCanvas.height);\n          var data = imgData.data;\n                \n          // Duplicate edge pixels\n          var i;\n          var j;\n          for (i = 2; i < faceCanvas.width - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i + faceCanvas.width) * 4 + j] = data[(i + faceCanvas.width * 2) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 3)) * 4 + j];\n            }\n          }\n          for (i = 2; i < faceCanvas.height - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width + 1) * 4 + j] = data[(i * faceCanvas.width + 2) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 2) * 4 + j] = data[((i + 1) * faceCanvas.width - 3) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[(faceCanvas.width + 1) * 4 + j] = data[(faceCanvas.width * 2 + 2) * 4 + j];\n            data[(faceCanvas.width * 2 - 2) * 4 + j] = data[(faceCanvas.width * 3 - 3) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 3) + 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) - 3) * 4 + j];\n          }\n          for (i = 1; i < faceCanvas.width - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[i * 4 + j] = data[(i + faceCanvas.width) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j];\n            }\n          }\n          for (i = 1; i < faceCanvas.height - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width) * 4 + j] = data[(i * faceCanvas.width + 1) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 1) * 4 + j] = data[((i + 1) * faceCanvas.width - 2) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[j] = data[(faceCanvas.width + 1) * 4 + j];\n            data[(faceCanvas.width - 1) * 4 + j] = data[(faceCanvas.width * 2 - 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j];\n            data[(faceCanvas.width * faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j];\n          }\n                \n          // Draw image width duplicated edge pixels on canvas\n          faceContext.putImageData(imgData, 0, 0);\n                \n          incLoaded.call(this);\n        };\n        var incLoaded = function() {\n          if (this.width > 0) {\n            if (fallbackImgSize === undefined)\n            {fallbackImgSize = this.width;}\n            if (fallbackImgSize != this.width)\n            {console.log('Fallback faces have inconsistent widths: ' + fallbackImgSize + ' vs. ' + this.width);}\n          } else\n          {faceMissing = true;}\n          loaded++;\n          if (loaded == 6) {\n            fallbackImgSize = this.width;\n            container.appendChild(world);\n            callback();\n          }\n        };\n        faceMissing = false;\n        for (s = 0; s < 6; s++) {\n          var faceImg = new Image();\n          faceImg.crossOrigin = globalParams.crossOrigin ? globalParams.crossOrigin : 'anonymous';\n          faceImg.side = s;\n          faceImg.onload = onLoad;\n          faceImg.onerror = incLoaded; // ignore missing face to support partial fallback image\n          if (imageType == 'multires') {\n            faceImg.src = encodeURI(path.replace('%s', sides[s]) + '.' + image.extension);\n          } else {\n            faceImg.src = encodeURI(image[s].src);\n          }\n        }\n        fillMissingFaces(fallbackImgSize);\n        return;\n      } else if (!gl) {\n        console.log('Error: no WebGL support detected!');\n        throw { type: 'no webgl' };\n      }\n      if (imageType == 'cubemap')\n      {fillMissingFaces(cubeImgWidth);}\n      if (image.basePath) {\n        image.fullpath = image.basePath + image.path;\n      } else {\n        image.fullpath = image.path;\n      }\n      image.invTileResolution = 1 / image.tileResolution;\n        \n      var vertices = createCube();\n      vtmps = [];\n      for (s = 0; s < 6; s++) {\n        vtmps[s] = vertices.slice(s * 12, s * 12 + 12);\n        vertices = createCube();\n      }\n        \n      // Make sure image isn't too big\n      var width = 0, maxWidth = 0;\n      if (imageType == 'equirectangular') {\n        width = Math.max(image.width, image.height);\n        maxWidth = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      } else if (imageType == 'cubemap') {\n        width = cubeImgWidth;\n        maxWidth = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      }\n      if (width > maxWidth) {\n        console.log('Error: The image is too big; it\\'s ' + width + 'px wide, '+\n                        'but this device\\'s maximum supported size is ' + maxWidth + 'px.');\n        throw { type: 'webgl size error', width: width, maxWidth: maxWidth };\n      }\n\n      // Store horizon pitch and roll if applicable\n      if (params !== undefined && (params.horizonPitch !== undefined || params.horizonRoll !== undefined))\n      {pose = [params.horizonPitch == undefined ? 0 : params.horizonPitch,\n        params.horizonRoll == undefined ? 0 : params.horizonRoll];}\n\n      // Set 2d texture binding\n      var glBindType = gl.TEXTURE_2D;\n\n      // Create viewport for entire canvas\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n      // Create vertex shader\n      vs = gl.createShader(gl.VERTEX_SHADER);\n      var vertexSrc = v;\n      if (imageType == 'multires') {\n        vertexSrc = vMulti;\n      }\n      gl.shaderSource(vs, vertexSrc);\n      gl.compileShader(vs);\n\n      // Create fragment shader\n      fs = gl.createShader(gl.FRAGMENT_SHADER);\n      var fragmentSrc = fragEquirectangular;\n      if (imageType == 'cubemap') {\n        glBindType = gl.TEXTURE_CUBE_MAP;\n        fragmentSrc = fragCube;\n      } else if (imageType == 'multires') {\n        fragmentSrc = fragMulti;\n      }\n      gl.shaderSource(fs, fragmentSrc);\n      gl.compileShader(fs);\n\n      // Link WebGL program\n      program = gl.createProgram();\n      gl.attachShader(program, vs);\n      gl.attachShader(program, fs);\n      gl.linkProgram(program);\n\n      // Log errors\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(vs));}\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(fs));}\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n      {console.log(gl.getProgramInfoLog(program));}\n\n      // Use WebGL program\n      gl.useProgram(program);\n\n      program.drawInProgress = false;\n\n      // Set background clear color (does not apply to cubemap/fallback image)\n      var color = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n      gl.clearColor(color[0], color[1], color[2], 1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      // Look up texture coordinates location\n      program.texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n      gl.enableVertexAttribArray(program.texCoordLocation);\n\n      if (imageType != 'multires') {\n        // Provide texture coordinates for rectangle\n        if (!texCoordBuffer)\n        {texCoordBuffer = gl.createBuffer();}\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1,1,1,1,1,-1,-1,1,1,-1,-1,-1]), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n        // Pass aspect ratio\n        program.aspectRatio = gl.getUniformLocation(program, 'u_aspectRatio');\n        gl.uniform1f(program.aspectRatio, gl.drawingBufferWidth / gl.drawingBufferHeight);\n\n        // Locate psi, theta, focal length, horizontal extent, vertical extent, and vertical offset\n        program.psi = gl.getUniformLocation(program, 'u_psi');\n        program.theta = gl.getUniformLocation(program, 'u_theta');\n        program.f = gl.getUniformLocation(program, 'u_f');\n        program.h = gl.getUniformLocation(program, 'u_h');\n        program.v = gl.getUniformLocation(program, 'u_v');\n        program.vo = gl.getUniformLocation(program, 'u_vo');\n        program.rot = gl.getUniformLocation(program, 'u_rot');\n\n        // Pass horizontal extent, vertical extent, and vertical offset\n        gl.uniform1f(program.h, haov / (Math.PI * 2.0));\n        gl.uniform1f(program.v, vaov / Math.PI);\n        gl.uniform1f(program.vo, voffset / Math.PI * 2);\n\n        // Set background color\n        if (imageType == 'equirectangular') {\n          program.backgroundColor = gl.getUniformLocation(program, 'u_backgroundColor');\n          gl.uniform4fv(program.backgroundColor, color.concat([1]));\n        }\n\n        // Create texture\n        program.texture = gl.createTexture();\n        gl.bindTexture(glBindType, program.texture);\n\n        // Upload images to texture depending on type\n        if (imageType == 'cubemap') {\n          // Load all six sides of the cube map\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[1]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[3]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[4]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[5]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[0]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[2]);\n        } else {\n          // Upload image to the texture\n          gl.texImage2D(glBindType, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n        }\n\n        // Set parameters for rendering any size\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(glBindType, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n      } else {\n        // Look up vertex coordinates location\n        program.vertPosLocation = gl.getAttribLocation(program, 'a_vertCoord');\n        gl.enableVertexAttribArray(program.vertPosLocation);\n\n        // Create buffers\n        if (!cubeVertBuf)\n        {cubeVertBuf = gl.createBuffer();}\n        if (!cubeVertTexCoordBuf)\n        {cubeVertTexCoordBuf = gl.createBuffer();}\n        if (!cubeVertIndBuf)\n        {cubeVertIndBuf = gl.createBuffer();}\n\n        // Bind texture coordinate buffer and pass coordinates to WebGL\n        gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0,0,1,0,1,1,0,1]), gl.STATIC_DRAW);\n\n        // Bind square index buffer and pass indicies to WebGL\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVertIndBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0,1,2,0,2,3]), gl.STATIC_DRAW);\n\n        // Find uniforms\n        program.perspUniform = gl.getUniformLocation(program, 'u_perspMatrix');\n        program.cubeUniform = gl.getUniformLocation(program, 'u_cubeMatrix');\n        //program.colorUniform = gl.getUniformLocation(program, 'u_color');\n\n        program.level = -1;\n\n        program.currentNodes = [];\n        program.nodeCache = [];\n        program.nodeCacheTimestamp = 0;\n      }\n\n      // Check if there was an error\n      var err = gl.getError();\n      if (err !== 0) {\n        console.log('Error: Something went wrong with WebGL!', err);\n        throw { type: 'webgl error' };\n      }\n\n      callback();\n    };\n\n    /**\n     * Destroy renderer.\n     * @memberof Renderer\n     * @instance\n     */\n    this.destroy = function() {\n      if (container !== undefined) {\n        if (canvas !== undefined && container.contains(canvas)) {\n          container.removeChild(canvas);\n        }\n        if (world !== undefined && container.contains(world)) {\n          container.removeChild(world);\n        }\n      }\n      if (gl) {\n        // The spec says this is only supposed to simulate losing the WebGL\n        // context, but in practice it tends to actually free the memory.\n        var extension = gl.getExtension('WEBGL_lose_context');\n        if (extension)\n        {extension.loseContext();}\n      }\n    };\n\n    /**\n     * Resize renderer (call after resizing container).\n     * @memberof Renderer\n     * @instance\n     */\n    this.resize = function() {\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.width = canvas.clientWidth * pixelRatio;\n      canvas.height = canvas.clientHeight * pixelRatio;\n      if (gl) {\n        if (gl.getError() == 1286)\n        {handleWebGLError1286();}\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (imageType != 'multires') {\n          gl.uniform1f(program.aspectRatio, canvas.clientWidth / canvas.clientHeight);\n        }\n      }\n    };\n    // Initialize canvas size\n    this.resize();\n\n    /**\n     * Set renderer horizon pitch and roll.\n     * @memberof Renderer\n     * @instance\n     */\n    this.setPose = function(horizonPitch, horizonRoll) {\n      pose = [horizonPitch, horizonRoll];\n    };\n\n    /**\n     * Render new view of panorama.\n     * @memberof Renderer\n     * @instance\n     * @param {number} pitch - Pitch to render at (in radians).\n     * @param {number} yaw - Yaw to render at (in radians).\n     * @param {number} hfov - Horizontal field of view to render with (in radians).\n     * @param {Object} [params] - Extra configuration parameters. \n     * @param {number} [params.roll] - Camera roll (in radians).\n     * @param {boolean} [params.returnImage] - Return rendered image?\n     */\n    this.render = function(pitch, yaw, hfov, params) {\n      var focal, i, s, roll = 0;\n      if (params === undefined)\n      {params = {};}\n      if (params.roll)\n      {roll = params.roll;}\n\n      // Apply pitch and roll transformation if applicable\n      if (pose !== undefined) {\n        var horizonPitch = pose[0],\n          horizonRoll = pose[1];\n\n        // Calculate new pitch and yaw\n        var orig_pitch = pitch,\n          orig_yaw = yaw,\n          x = Math.cos(horizonRoll) * Math.sin(pitch) * Math.sin(horizonPitch) +\n                    Math.cos(pitch) * (Math.cos(horizonPitch) * Math.cos(yaw) +\n                    Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.sin(yaw)),\n          y = -Math.sin(pitch) * Math.sin(horizonRoll) +\n                    Math.cos(pitch) * Math.cos(horizonRoll) * Math.sin(yaw),\n          z = Math.cos(horizonRoll) * Math.cos(horizonPitch) * Math.sin(pitch) +\n                    Math.cos(pitch) * (-Math.cos(yaw) * Math.sin(horizonPitch) +\n                    Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.sin(yaw));\n        pitch = Math.asin(Math.max(Math.min(z, 1), -1));\n        yaw = Math.atan2(y, x);\n\n        // Calculate roll\n        var v = [Math.cos(orig_pitch) * (Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.cos(orig_yaw) -\n                    Math.cos(horizonPitch) * Math.sin(orig_yaw)),\n          Math.cos(orig_pitch) * Math.cos(horizonRoll) * Math.cos(orig_yaw),\n          Math.cos(orig_pitch) * (Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.cos(orig_yaw) +\n                    Math.sin(orig_yaw) * Math.sin(horizonPitch))],\n          w = [-Math.cos(pitch) * Math.sin(yaw), Math.cos(pitch) * Math.cos(yaw)];\n        var roll_adj = Math.acos(Math.max(Math.min((v[0]*w[0] + v[1]*w[1]) /\n                (Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]) *\n                Math.sqrt(w[0]*w[0]+w[1]*w[1])), 1), -1));\n        if (v[2] < 0)\n        {roll_adj = 2 * Math.PI - roll_adj;}\n        roll += roll_adj;\n      }\n\n      // If no WebGL\n      if (!gl && (imageType == 'multires' || imageType == 'cubemap')) {\n        // Determine face transforms\n        s = fallbackImgSize / 2;\n            \n        var transforms = {\n          f: 'translate3d(-' + (s + 2) + 'px, -' + (s + 2) + 'px, -' + s + 'px)',\n          b: 'translate3d(' + (s + 2) + 'px, -' + (s + 2) + 'px, ' + s + 'px) rotateX(180deg) rotateZ(180deg)',\n          u: 'translate3d(-' + (s + 2) + 'px, -' + s + 'px, ' + (s + 2) + 'px) rotateX(270deg)',\n          d: 'translate3d(-' + (s + 2) + 'px, ' + s + 'px, -' + (s + 2) + 'px) rotateX(90deg)',\n          l: 'translate3d(-' + s + 'px, -' + (s + 2) + 'px, ' + (s + 2) + 'px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)',\n          r: 'translate3d(' + s + 'px, -' + (s + 2) + 'px, -' + (s + 2) + 'px) rotateY(270deg)'\n        };\n        focal = 1 / Math.tan(hfov / 2);\n        var zoom = focal * canvas.clientWidth / 2 + 'px';\n        var transform = 'perspective(' + zoom + ') translateZ(' + zoom + ') rotateX(' + pitch + 'rad) rotateY(' + yaw + 'rad) ';\n            \n        // Apply face transforms\n        var faces = Object.keys(transforms);\n        for (i = 0; i < 6; i++) {\n          var face = world.querySelector('.pnlm-' + faces[i] + 'face');\n          if (!face)\n          {continue;} // ignore missing face to support partial cubemap/fallback image\n          face.style.webkitTransform = transform + transforms[faces[i]];\n          face.style.transform = transform + transforms[faces[i]];\n        }\n        return;\n      }\n        \n      if (imageType != 'multires') {\n        // Calculate focal length from vertical field of view\n        var vfov = 2 * Math.atan(Math.tan(hfov * 0.5) / (gl.drawingBufferWidth / gl.drawingBufferHeight));\n        focal = 1 / Math.tan(vfov * 0.5);\n\n        // Pass psi, theta, roll, and focal length\n        gl.uniform1f(program.psi, yaw);\n        gl.uniform1f(program.theta, pitch);\n        gl.uniform1f(program.rot, roll);\n        gl.uniform1f(program.f, focal);\n            \n        if (dynamic === true) {\n          // Update texture if dynamic\n          if (imageType == 'equirectangular') {\n            gl.bindTexture(gl.TEXTURE_2D, program.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n          }\n        }\n            \n        // Draw using current buffer\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        \n      } else {\n        // Create perspective matrix\n        var perspMatrix = makePersp(hfov, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 100.0);\n            \n        // Find correct zoom level\n        checkZoom(hfov);\n            \n        // Create rotation matrix\n        var matrix = identityMatrix3();\n        matrix = rotateMatrix(matrix, -roll, 'z');\n        matrix = rotateMatrix(matrix, -pitch, 'x');\n        matrix = rotateMatrix(matrix, yaw, 'y');\n        matrix = makeMatrix4(matrix);\n            \n        // Set matrix uniforms\n        gl.uniformMatrix4fv(program.perspUniform, false, new Float32Array(transposeMatrix4(perspMatrix)));\n        gl.uniformMatrix4fv(program.cubeUniform, false, new Float32Array(transposeMatrix4(matrix)));\n            \n        // Find current nodes\n        var rotPersp = rotatePersp(perspMatrix, matrix);\n        program.nodeCache.sort(multiresNodeSort);\n        if (program.nodeCache.length > 200 &&\n                program.nodeCache.length > program.currentNodes.length + 50) {\n          // Remove older nodes from cache\n          var removed = program.nodeCache.splice(200, program.nodeCache.length - 200);\n          for (var i = 0; i < removed.length; i++) {\n            // Explicitly delete textures\n            gl.deleteTexture(removed[i].texture);\n          }\n        }\n        program.currentNodes = [];\n            \n        var sides = ['f', 'b', 'u', 'd', 'l', 'r'];\n        for (s = 0; s < 6; s++) {\n          var ntmp = new MultiresNode(vtmps[s], sides[s], 1, 0, 0, image.fullpath);\n          testMultiresNode(rotPersp, ntmp, pitch, yaw, hfov);\n        }\n            \n        program.currentNodes.sort(multiresNodeRenderSort);\n            \n        // Unqueue any pending requests for nodes that are no longer visible\n        for (i = pendingTextureRequests.length - 1; i >= 0; i--) {\n          if (program.currentNodes.indexOf(pendingTextureRequests[i].node) === -1) {\n            pendingTextureRequests[i].node.textureLoad = false;\n            pendingTextureRequests.splice(i, 1);\n          }\n        }\n            \n        // Allow one request to be pending, so that we can create a texture buffer for that in advance of loading actually beginning\n        if (pendingTextureRequests.length === 0) {\n          for (i = 0; i < program.currentNodes.length; i++) {\n            var node = program.currentNodes[i];\n            if (!node.texture && !node.textureLoad) {\n              node.textureLoad = true;\n            \n              setTimeout(processNextTile, 0, node);\n                        \n              // Only process one tile per frame to improve responsiveness\n              break;\n            }\n          }\n        }\n            \n        // Draw tiles\n        multiresDraw();\n      }\n        \n      if (params.returnImage !== undefined) {\n        return canvas.toDataURL('image/png');\n      }\n    };\n    \n    /**\n     * Check if images are loading.\n     * @memberof Renderer\n     * @instance\n     * @returns {boolean} Whether or not images are loading.\n     */\n    this.isLoading = function() {\n      if (gl && imageType == 'multires') {\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (!program.currentNodes[i].textureLoaded) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    \n    /**\n     * Retrieve renderer's canvas.\n     * @memberof Renderer\n     * @instance\n     * @returns {HTMLElement} Renderer's canvas.\n     */\n    this.getCanvas = function() {\n      return canvas;\n    };\n    \n    /**\n     * Sorting method for multires nodes.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Base tiles first, then higher timestamp first.\n     */\n    function multiresNodeSort(a, b) {\n      // Base tiles are always first\n      if (a.level == 1 && b.level != 1) {\n        return -1;\n      }\n      if (b.level == 1 && a.level != 1) {\n        return 1;\n      }\n        \n      // Higher timestamp first\n      return b.timestamp - a.timestamp;\n    }\n    \n    /**\n     * Sorting method for multires node rendering.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Lower zoom levels first, then closest to center first.\n     */\n    function multiresNodeRenderSort(a, b) {\n      // Lower zoom levels first\n      if (a.level != b.level) {\n        return a.level - b.level;\n      }\n        \n      // Lower distance from center first\n      return a.diff - b.diff;\n    }\n    \n    /**\n     * Draws multires nodes.\n     * @private\n     */\n    function multiresDraw() {\n      if (!program.drawInProgress) {\n        program.drawInProgress = true;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (program.currentNodes[i].textureLoaded > 1) {\n            //var color = program.currentNodes[i].color;\n            //gl.uniform4f(program.colorUniform, color[0], color[1], color[2], 1.0);\n                    \n            // Bind vertex buffer and pass vertices to WebGL\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertBuf);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(program.currentNodes[i].vertices), gl.STATIC_DRAW);\n            gl.vertexAttribPointer(program.vertPosLocation, 3, gl.FLOAT, false, 0, 0);\n                    \n            // Prep for texture\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n            gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n                    \n            // Bind texture and draw tile\n            gl.bindTexture(gl.TEXTURE_2D, program.currentNodes[i].texture); // Bind program.currentNodes[i].texture to TEXTURE0\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n        program.drawInProgress = false;\n      }\n    }\n\n    /**\n     * Creates new multires node.\n     * @constructor\n     * @private\n     * @param {number[]} vertices - Node's verticies.\n     * @param {string} side - Node's cube face.\n     * @param {number} level - Node's zoom level.\n     * @param {number} x - Node's x position.\n     * @param {number} y - Node's y position.\n     * @param {string} path - Node's path.\n     */\n    function MultiresNode(vertices, side, level, x, y, path) {\n      this.vertices = vertices;\n      this.side = side;\n      this.level = level;\n      this.x = x;\n      this.y = y;\n      this.path = path.replace('%s',side).replace('%l',level).replace('%x',x).replace('%y',y);\n    }\n\n    /**\n     * Test if multires node is visible. If it is, add it to current nodes,\n     * load its texture, and load appropriate child nodes.\n     * @private\n     * @param {number[]} rotPersp - Rotated perspective matrix.\n     * @param {MultiresNode} node - Multires node to check.\n     * @param {number} pitch - Pitch to check at.\n     * @param {number} yaw - Yaw to check at.\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function testMultiresNode(rotPersp, node, pitch, yaw, hfov) {\n      if (checkSquareInView(rotPersp, node.vertices)) {\n        // Calculate central angle between center of view and center of tile\n        var v = node.vertices;\n        var x = v[0] + v[3] + v[6] + v[ 9];\n        var y = v[1] + v[4] + v[7] + v[10];\n        var z = v[2] + v[5] + v[8] + v[11];\n        var r = Math.sqrt(x*x + y*y + z*z);\n        var theta = Math.asin(z / r);\n        var phi = Math.atan2(y, x);\n        var ydiff = phi - yaw;\n        ydiff += (ydiff > Math.PI) ? -2 * Math.PI : (ydiff < -Math.PI) ? 2 * Math.PI : 0;\n        ydiff = Math.abs(ydiff);\n        node.diff = Math.acos(Math.sin(pitch) * Math.sin(theta) + Math.cos(pitch) * Math.cos(theta) * Math.cos(ydiff));\n            \n        // Add node to current nodes and load texture if needed\n        var inCurrent = false;\n        for (var k = 0; k < program.nodeCache.length; k++) {\n          if (program.nodeCache[k].path == node.path) {\n            inCurrent = true;\n            program.nodeCache[k].timestamp = program.nodeCacheTimestamp++;\n            program.nodeCache[k].diff = node.diff;\n            program.currentNodes.push(program.nodeCache[k]);\n            break;\n          }\n        }\n        if (!inCurrent) {\n          //node.color = [Math.random(), Math.random(), Math.random()];\n          node.timestamp = program.nodeCacheTimestamp++;\n          program.currentNodes.push(node);\n          program.nodeCache.push(node);\n        }\n            \n        // TODO: Test error\n        // Create child nodes\n        if (node.level < program.level) {\n          var cubeSize = image.cubeResolution * Math.pow(2, node.level - image.maxLevel);\n          var numTiles = Math.ceil(cubeSize * image.invTileResolution) - 1;\n          var doubleTileSize = cubeSize % image.tileResolution * 2;\n          var lastTileSize = (cubeSize * 2) % image.tileResolution;\n          if (lastTileSize === 0) {\n            lastTileSize = image.tileResolution;\n          }\n          if (doubleTileSize === 0) {\n            doubleTileSize = image.tileResolution * 2;\n          }\n          var f = 0.5;\n          if (node.x == numTiles || node.y == numTiles) {\n            f = 1.0 - image.tileResolution / (image.tileResolution + lastTileSize);\n          }\n          var i = 1.0 - f;\n          var children = [];\n          var vtmp, ntmp;\n          var f1 = f, f2 = f, f3 = f, i1 = i, i2 = i, i3 = i;\n          // Handle non-symmetric tiles\n          if (lastTileSize < image.tileResolution) {\n            if (node.x == numTiles && node.y != numTiles) {\n              f2 = 0.5;\n              i2 = 0.5;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            } else if (node.x != numTiles && node.y == numTiles) {\n              f1 = 0.5;\n              i1 = 0.5;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            }\n          }\n          // Handle small tiles that have fewer than four children\n          if (doubleTileSize <= image.tileResolution) {\n            if (node.x == numTiles) {\n              f1 = 0;\n              i1 = 1;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n            if (node.y == numTiles) {\n              f2 = 0;\n              i2 = 1;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n          }\n                \n          vtmp = [           v[0],             v[1],             v[2],\n            v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n            v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n            v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3\n          ];\n          ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2, image.fullpath);\n          children.push(ntmp);\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n              v[3],             v[4],             v[5],\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution) &&\n                    !(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[6],             v[7],             v[8],\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [  v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3,\n              v[9],            v[10],            v[11]\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          for (var j = 0; j < children.length; j++) {\n            testMultiresNode(rotPersp, children[j], pitch, yaw, hfov);\n          }\n        }\n      }\n    }\n    \n    /**\n     * Creates cube vertex array.\n     * @private\n     * @returns {number[]} Cube vertex array.\n     */\n    function createCube() {\n      return [-1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, // Front face\n        1,  1,  1, -1,  1,  1, -1, -1,  1,  1, -1,  1, // Back face\n        -1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1, -1, // Up face\n        -1, -1, -1,  1, -1, -1,  1, -1,  1, -1, -1,  1, // Down face\n        -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1,  1, // Left face\n        1,  1, -1,  1,  1,  1,  1, -1,  1,  1, -1, -1  // Right face\n      ];\n    }\n    \n    /**\n     * Creates 3x3 identity matrix.\n     * @private\n     * @returns {number[]} Identity matrix.\n     */\n    function identityMatrix3() {\n      return [\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n      ];\n    }\n    \n    /**\n     * Rotates a 3x3 matrix.\n     * @private\n     * @param {number[]} m - Matrix to rotate.\n     * @param {number[]} angle - Angle to rotate by in radians.\n     * @param {string} axis - Axis to rotate about (`x`, `y`, or `z`).\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotateMatrix(m, angle, axis) {\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      if (axis == 'x') {\n        return [\n          m[0], c*m[1] + s*m[2], c*m[2] - s*m[1],\n          m[3], c*m[4] + s*m[5], c*m[5] - s*m[4],\n          m[6], c*m[7] + s*m[8], c*m[8] - s*m[7]\n        ];\n      }\n      if (axis == 'y') {\n        return [\n          c*m[0] - s*m[2], m[1], c*m[2] + s*m[0],\n          c*m[3] - s*m[5], m[4], c*m[5] + s*m[3],\n          c*m[6] - s*m[8], m[7], c*m[8] + s*m[6]\n        ];\n      }\n      if (axis == 'z') {\n        return [\n          c*m[0] + s*m[1], c*m[1] - s*m[0], m[2],\n          c*m[3] + s*m[4], c*m[4] - s*m[3], m[5],\n          c*m[6] + s*m[7], c*m[7] - s*m[6], m[8]\n        ];\n      }\n    }\n    \n    /**\n     * Turns a 3x3 matrix into a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Expanded matrix.\n     */\n    function makeMatrix4(m) {\n      return [\n        m[0], m[1], m[2],    0,\n        m[3], m[4], m[5],    0,\n        m[6], m[7], m[8],    0,\n        0,    0,    0,    1\n      ];\n    }\n    \n    /**\n     * Transposes a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Transposed matrix.\n     */\n    function transposeMatrix4(m) {\n      return [\n        m[ 0], m[ 4], m[ 8], m[12],\n        m[ 1], m[ 5], m[ 9], m[13],\n        m[ 2], m[ 6], m[10], m[14],\n        m[ 3], m[ 7], m[11], m[15]\n      ];\n    }\n    \n    /**\n     * Creates a perspective matrix.\n     * @private\n     * @param {number} hfov - Desired horizontal field of view.\n     * @param {number} aspect - Desired aspect ratio.\n     * @param {number} znear - Near distance.\n     * @param {number} zfar - Far distance.\n     * @returns {number[]} Generated perspective matrix.\n     */\n    function makePersp(hfov, aspect, znear, zfar) {\n      var fovy = 2 * Math.atan(Math.tan(hfov/2) * gl.drawingBufferHeight / gl.drawingBufferWidth);\n      var f = 1 / Math.tan(fovy/2);\n      return [\n        f/aspect,   0,  0,  0,\n        0,   f,  0,  0,\n        0,   0,  (zfar+znear)/(znear-zfar), (2*zfar*znear)/(znear-zfar),\n        0,   0, -1,  0\n      ];\n    }\n    \n    /**\n     * Processes a loaded texture image into a WebGL texture.\n     * @private\n     * @param {Image} img - Input image.\n     * @param {WebGLTexture} tex - Texture to bind image to.\n     */\n    function processLoadedTexture(img, tex) {\n      gl.bindTexture(gl.TEXTURE_2D, tex);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    \n    var pendingTextureRequests = [];\n\n    // Based on http://blog.tojicode.com/2012/03/javascript-memory-optimization-and.html\n    var loadTexture = (function() {\n      var cacheTop = 4;   // Maximum number of concurrents loads\n      var textureImageCache = {};\n      var crossOrigin;\n\n      function TextureImageLoader() {\n        var self = this;\n        this.texture = this.callback = null;\n        this.image = new Image();\n        this.image.crossOrigin = crossOrigin ? crossOrigin : 'anonymous';\n        var loadFn = (function() {\n          if (self.image.width > 0 && self.image.height > 0) { // ignore missing tile to supporting partial image\n            processLoadedTexture(self.image, self.texture);\n            self.callback(self.texture, true);\n          } else {\n            self.callback(self.texture, false);\n          }\n          releaseTextureImageLoader(self);\n        });\n        this.image.addEventListener('load', loadFn);\n        this.image.addEventListener('error', loadFn); // ignore missing tile file to support partial image, otherwise retry loop causes high CPU load\n      };\n\n      TextureImageLoader.prototype.loadTexture = function(src, texture, callback) {\n        this.texture = texture;\n        this.callback = callback;\n        this.image.src = src;\n      };\n\n      function PendingTextureRequest(node, src, texture, callback) {\n        this.node = node;\n        this.src = src;\n        this.texture = texture;\n        this.callback = callback;\n      };\n\n      function releaseTextureImageLoader(til) {\n        if (pendingTextureRequests.length) {\n          var req = pendingTextureRequests.shift();\n          til.loadTexture(req.src, req.texture, req.callback);\n        } else\n        {textureImageCache[cacheTop++] = til;}\n      }\n\n      for (var i = 0; i < cacheTop; i++)\n      {textureImageCache[i] = new TextureImageLoader();}\n\n      return function(node, src, callback, _crossOrigin) {\n        crossOrigin = _crossOrigin;\n        var texture = gl.createTexture();\n        if (cacheTop)\n        {textureImageCache[--cacheTop].loadTexture(src, texture, callback);}\n        else\n        {pendingTextureRequests.push(new PendingTextureRequest(node, src, texture, callback));}\n        return texture;\n      };\n    })();\n\n    /**\n     * Loads image and creates texture for a multires node / tile.\n     * @private\n     * @param {MultiresNode} node - Input node.\n     */\n    function processNextTile(node) {\n      loadTexture(node, encodeURI(node.path + '.' + image.extension), function(texture, loaded) {\n        node.texture = texture;\n        node.textureLoaded = loaded ? 2 : 1;\n      }, globalParams.crossOrigin);\n    }\n    \n    /**\n     * Finds and applies optimal multires zoom level.\n     * @private\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function checkZoom(hfov) {\n      // Find optimal level\n      var newLevel = 1;\n      while ( newLevel < image.maxLevel &&\n            gl.drawingBufferWidth > image.tileResolution *\n            Math.pow(2, newLevel - 1) * Math.tan(hfov / 2) * 0.707 ) {\n        newLevel++;\n      }\n        \n      // Apply change\n      program.level = newLevel;\n    }\n    \n    /**\n     * Rotates perspective matrix.\n     * @private\n     * @param {number[]} p - Perspective matrix.\n     * @param {number[]} r - Rotation matrix.\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotatePersp(p, r) {\n      return [\n        p[ 0]*r[0], p[ 0]*r[1], p[ 0]*r[ 2],     0,\n        p[ 5]*r[4], p[ 5]*r[5], p[ 5]*r[ 6],     0,\n        p[10]*r[8], p[10]*r[9], p[10]*r[10], p[11],\n        -r[8],      -r[9],      -r[10],     0\n      ];\n    }\n    \n    /**\n     * Applies rotated perspective matrix to a 3-vector\n     * (last element is inverted).\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input 3-vector.\n     * @returns {number[]} Resulting 4-vector.\n     */\n    function applyRotPerspToVec(m, v) {\n      return [\n        m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2],\n        m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2],\n        m[11] + m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2],\n        1/(m[12]*v[0] + m[13]*v[1] + m[14]*v[2])\n      ];\n    }\n    \n    /**\n     * Checks if a vertex is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input vertex.\n     * @returns {number} 1 or -1 if the vertex is or is not visible,\n     *      respectively.\n     */\n    function checkInView(m, v) {\n      var vpp = applyRotPerspToVec(m, v);\n      var winX = vpp[0]*vpp[3];\n      var winY = vpp[1]*vpp[3];\n      var winZ = vpp[2]*vpp[3];\n      var ret = [0, 0, 0];\n        \n      if ( winX < -1 )\n      {ret[0] = -1;}\n      if ( winX > 1 )\n      {ret[0] = 1;}\n      if ( winY < -1 )\n      {ret[1] = -1;}\n      if ( winY > 1 )\n      {ret[1] = 1;}\n      if ( winZ < -1 || winZ > 1 )\n      {ret[2] = 1;}\n      return ret;\n    }\n    \n    /**\n     * Checks if a square (tile) is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Square's vertex array.\n     * @returns {boolean} Whether or not the square is visible.\n     */\n    function checkSquareInView(m, v) {\n      var check1 = checkInView(m, v.slice(0, 3));\n      var check2 = checkInView(m, v.slice(3, 6));\n      var check3 = checkInView(m, v.slice(6, 9));\n      var check4 = checkInView(m, v.slice(9, 12));\n      var testX = check1[0] + check2[0] + check3[0] + check4[0];\n      if ( testX == -4 || testX == 4 )\n      {return false;}\n      var testY = check1[1] + check2[1] + check3[1] + check4[1];\n      if ( testY == -4 || testY == 4 )\n      {return false;}\n      var testZ = check1[2] + check2[2] + check3[2] + check4[2];\n      return testZ != 4;\n        \n\n    }\n\n    /**\n     * On iOS (iPhone 5c, iOS 10.3), this WebGL error occurs when the canvas is\n     * too big. Unfortuately, there's no way to test for this beforehand, so we\n     * reduce the canvas size if this error is thrown.\n     * @private\n     */\n    function handleWebGLError1286() {\n      console.log('Reducing canvas size due to error 1286!');\n      canvas.width = Math.round(canvas.width / 2);\n      canvas.height = Math.round(canvas.height / 2);\n    }\n  }\n\n  // Vertex shader for equirectangular and cube\n  var v = [\n    'attribute vec2 a_texCoord;',\n    'varying vec2 v_texCoord;',\n\n    'void main() {',\n    // Set position\n    'gl_Position = vec4(a_texCoord, 0.0, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Vertex shader for multires\n  var vMulti = [\n    'attribute vec3 a_vertCoord;',\n    'attribute vec2 a_texCoord;',\n\n    'uniform mat4 u_cubeMatrix;',\n    'uniform mat4 u_perspMatrix;',\n\n    'varying mediump vec2 v_texCoord;',\n\n    'void main(void) {',\n    // Set position\n    'gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Fragment shader\n  var fragEquiCubeBase = [\n    'precision mediump float;',\n\n    'uniform float u_aspectRatio;',\n    'uniform float u_psi;',\n    'uniform float u_theta;',\n    'uniform float u_f;',\n    'uniform float u_h;',\n    'uniform float u_v;',\n    'uniform float u_vo;',\n    'uniform float u_rot;',\n\n    'const float PI = 3.14159265358979323846264;',\n\n    // Texture\n    'uniform sampler2D u_image;',\n    'uniform samplerCube u_imageCube;',\n\n    // Coordinates passed in from vertex shader\n    'varying vec2 v_texCoord;',\n\n    // Background color (display for partial panoramas)\n    'uniform vec4 u_backgroundColor;',\n\n    'void main() {',\n    // Map canvas/camera to sphere\n    'float x = v_texCoord.x * u_aspectRatio;',\n    'float y = v_texCoord.y;',\n    'float sinrot = sin(u_rot);',\n    'float cosrot = cos(u_rot);',\n    'float rot_x = x * cosrot - y * sinrot;',\n    'float rot_y = x * sinrot + y * cosrot;',\n    'float sintheta = sin(u_theta);',\n    'float costheta = cos(u_theta);',\n    'float a = u_f * costheta - rot_y * sintheta;',\n    'float root = sqrt(rot_x * rot_x + a * a);',\n    'float lambda = atan(rot_x / root, a / root) + u_psi;',\n    'float phi = atan((rot_y * costheta + u_f * sintheta) / root);',\n  ].join('\\n');\n\n  // Fragment shader\n  var fragCube = fragEquiCubeBase + [\n    // Look up color from texture\n    'float cosphi = cos(phi);',\n    'gl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragEquirectangular = fragEquiCubeBase + [\n    // Wrap image\n    'lambda = mod(lambda + PI, PI * 2.0) - PI;',\n\n    // Map texture to sphere\n    'vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));',\n\n    // Look up color from texture\n    // Map from [-1,1] to [0,1] and flip y-axis\n    'if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)',\n    'gl_FragColor = u_backgroundColor;',\n    'else',\n    'gl_FragColor = texture2D(u_image, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragMulti = [\n    'varying mediump vec2 v_texCoord;',\n    'uniform sampler2D u_sampler;',\n    //'uniform mediump vec4 u_color;',\n\n    'void main(void) {',\n    // Look up color from texture\n    'gl_FragColor = texture2D(u_sampler, v_texCoord);',\n    //    'gl_FragColor = u_color;',\n    '}'\n  ].join('');\n\n  return {\n    renderer: function(container, image, imagetype, dynamic) {\n      return new Renderer(container, image, imagetype, dynamic);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/libpannellum.js","/*\n * Pannellum - An HTML5 based Panorama Viewer\n * Copyright (c) 2011-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.pannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama viewer.\n * @constructor\n * @param {HTMLElement|string} container - The container (div) element for the\n *      viewer, or its ID.\n * @param {Object} initialConfig - Inital configuration for viewer.\n */\n  function Viewer(container, initialConfig) {\n\n    var _this = this;\n\n    // Declare variables\n    var config,\n      renderer,\n      preview,\n      isUserInteracting = false,\n      latestInteraction = Date.now(),\n      onPointerDownPointerX = 0,\n      onPointerDownPointerY = 0,\n      onPointerDownPointerDist = -1,\n      onPointerDownYaw = 0,\n      onPointerDownPitch = 0,\n      keysDown = new Array(10),\n      fullscreenActive = false,\n      loaded,\n      error = false,\n      isTimedOut = false,\n      listenersAdded = false,\n      panoImage,\n      prevTime,\n      speed = { 'yaw': 0, 'pitch': 0, 'hfov': 0 },\n      animating = false,\n      orientation = false,\n      orientationYawOffset = 0,\n      autoRotateStart,\n      autoRotateSpeed = 0,\n      origHfov,\n      origPitch,\n      animatedMove = {},\n      externalEventListeners = {},\n      specifiedPhotoSphereExcludes = [],\n      update = false, // Should we update when still to render dynamic content\n      hotspotsCreated = false;\n\n    var defaultConfig = {\n      hfov: 100,\n      minHfov: 50,\n      maxHfov: 120,\n      pitch: 0,\n      minPitch: undefined,\n      maxPitch: undefined,\n      yaw: 0,\n      minYaw: -180,\n      maxYaw: 180,\n      roll: 0,\n      haov: 360,\n      vaov: 180,\n      vOffset: 0,\n      autoRotate: false,\n      autoRotateInactivityDelay: -1,\n      autoRotateStopDelay: undefined,\n      type: 'equirectangular',\n      northOffset: 0,\n      showFullscreenCtrl: true,\n      dynamic: false,\n      doubleClickZoom: true,\n      keyboardZoom: true,\n      mouseZoom: true,\n      showZoomCtrl: true,\n      autoLoad: false,\n      showControls: true,\n      orientationOnByDefault: false,\n      hotSpotDebug: false,\n      backgroundColor: [0, 0, 0],\n      avoidShowingBackground: false,\n      animationTimingFunction: timingFunction,\n      draggable: true,\n      disableKeyboardCtrl: false,\n      crossOrigin: 'anonymous',\n      touchPanSpeedCoeffFactor: 1,\n      capturedKeyNumbers: [16, 17, 27, 37, 38, 39, 40, 61, 65, 68, 83, 87, 107, 109, 173, 187, 189],\n    };\n\n    // Translatable / configurable strings\n    // Some strings contain '%s', which is a placeholder for inserted values\n    // When setting strings in external configuration, `\\n` should be used instead of `<br>` to insert line breaks\n    defaultConfig.strings = {\n    // Labels\n      loadButtonLabel: 'Click to<br>Load<br>Panorama',\n      loadingLabel: 'Chargement...',\n      bylineLabel: 'by %s',    // One substitution: author\n\n      // Errors\n      noPanoramaError: 'No panorama image was specified.',\n      fileAccessError: 'The file %s could not be accessed.',  // One substitution: file URL\n      malformedURLError: 'There is something wrong with the panorama URL.',\n      iOS8WebGLError: \"Due to iOS 8's broken WebGL implementation, only \" +\n                    \"progressive encoded JPEGs work for your device (this \" +\n                    \"panorama uses standard encoding).\",\n      genericWebGLError: 'Your browser does not have the necessary WebGL support to display this panorama.',\n      textureSizeError: 'This panorama is too big for your device! It\\'s ' +\n                '%spx wide, but your device only supports images up to ' +\n                '%spx wide. Try another device.' +\n                ' (If you\\'re the author, try scaling down the image.)',    // Two substitutions: image width, max image width\n      unknownError: 'Unknown error. Check developer console.',\n    };\n\n    // Initialize container\n    container = typeof container === 'string' ? document.getElementById(container) : container;\n    container.classList.add('pnlm-container');\n    container.tabIndex = 0;\n\n    // Create container for ui\n    var uiContainer = document.createElement('div');\n    uiContainer.className = 'pnlm-ui';\n    container.appendChild(uiContainer);\n\n    // Create container for renderer\n    var renderContainer = document.createElement('div');\n    renderContainer.className = 'pnlm-render-container';\n    container.appendChild(renderContainer);\n    var dragFix = document.createElement('div');\n    dragFix.className = 'pnlm-dragfix';\n    uiContainer.appendChild(dragFix);\n\n    // Display about information on right click\n    var aboutMsg = document.createElement('span');\n    aboutMsg.className = 'pnlm-about-msg';\n    aboutMsg.innerHTML = '<a href=\"https://sigcg02.maps.arcgis.com/home/index.html/\" target=\"_blank\">Service SIG du Conseil départemental de l'Aisne</a>';\n    uiContainer.appendChild(aboutMsg);\n    dragFix.addEventListener('contextmenu', aboutMessage);\n\n    // Create info display\n    var infoDisplay = {};\n\n    // Hot spot debug indicator\n    var hotSpotDebugIndicator = document.createElement('div');\n    hotSpotDebugIndicator.className = 'pnlm-sprite pnlm-hot-spot-debug-indicator';\n    uiContainer.appendChild(hotSpotDebugIndicator);\n\n    // Panorama info\n    infoDisplay.container = document.createElement('div');\n    infoDisplay.container.className = 'pnlm-panorama-info';\n    infoDisplay.title = document.createElement('div');\n    infoDisplay.title.className = 'pnlm-title-box';\n    infoDisplay.container.appendChild(infoDisplay.title);\n    infoDisplay.author = document.createElement('div');\n    infoDisplay.author.className = 'pnlm-author-box';\n    infoDisplay.container.appendChild(infoDisplay.author);\n    uiContainer.appendChild(infoDisplay.container);\n\n    // Load box\n    infoDisplay.load = {};\n    infoDisplay.load.box = document.createElement('div');\n    infoDisplay.load.box.className = 'pnlm-load-box';\n    infoDisplay.load.boxp = document.createElement('p');\n    infoDisplay.load.box.appendChild(infoDisplay.load.boxp);\n    infoDisplay.load.lbox = document.createElement('div');\n    infoDisplay.load.lbox.className = 'pnlm-lbox';\n    infoDisplay.load.lbox.innerHTML = '<div class=\"pnlm-loading\"></div>';\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbox);\n    infoDisplay.load.lbar = document.createElement('div');\n    infoDisplay.load.lbar.className = 'pnlm-lbar';\n    infoDisplay.load.lbarFill = document.createElement('div');\n    infoDisplay.load.lbarFill.className = 'pnlm-lbar-fill';\n    infoDisplay.load.lbar.appendChild(infoDisplay.load.lbarFill);\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbar);\n    infoDisplay.load.msg = document.createElement('p');\n    infoDisplay.load.msg.className = 'pnlm-lmsg';\n    infoDisplay.load.box.appendChild(infoDisplay.load.msg);\n    uiContainer.appendChild(infoDisplay.load.box);\n\n    // Error message\n    infoDisplay.errorMsg = document.createElement('div');\n    infoDisplay.errorMsg.className = 'pnlm-error-msg pnlm-info-box';\n    uiContainer.appendChild(infoDisplay.errorMsg);\n\n    // Create controls\n    var controls = {};\n    controls.container = document.createElement('div');\n    controls.container.className = 'pnlm-controls-container';\n    uiContainer.appendChild(controls.container);\n\n    // Load button\n    controls.load = document.createElement('div');\n    controls.load.className = 'pnlm-load-button';\n    controls.load.addEventListener('click', function() {\n      processOptions();\n      load();\n    });\n    uiContainer.appendChild(controls.load);\n\n    // Zoom controls\n    controls.zoom = document.createElement('div');\n    controls.zoom.className = 'pnlm-zoom-controls pnlm-controls';\n    controls.zoomIn = document.createElement('div');\n    controls.zoomIn.className = 'pnlm-zoom-in pnlm-sprite pnlm-control';\n    controls.zoomIn.addEventListener('click', zoomIn);\n    controls.zoom.appendChild(controls.zoomIn);\n    controls.zoomOut = document.createElement('div');\n    controls.zoomOut.className = 'pnlm-zoom-out pnlm-sprite pnlm-control';\n    controls.zoomOut.addEventListener('click', zoomOut);\n    controls.zoom.appendChild(controls.zoomOut);\n    controls.container.appendChild(controls.zoom);\n\n    // Fullscreen toggle\n    controls.fullscreen = document.createElement('div');\n    controls.fullscreen.addEventListener('click', toggleFullscreen);\n    controls.fullscreen.className = 'pnlm-fullscreen-toggle-button pnlm-sprite pnlm-fullscreen-toggle-button-inactive pnlm-controls pnlm-control';\n    if (document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled)\n      {controls.container.appendChild(controls.fullscreen);}\n\n    // Device orientation toggle\n    controls.orientation = document.createElement('div');\n    controls.orientation.addEventListener('click', function(e) {\n      if (orientation)\n        {stopOrientation();}\n      else\n        {startOrientation();}\n    });\n    controls.orientation.addEventListener('mousedown', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('touchstart', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('pointerdown', function(e) {e.stopPropagation();});\n    controls.orientation.className = 'pnlm-orientation-button pnlm-orientation-button-inactive pnlm-sprite pnlm-controls pnlm-control';\n    var orientationSupport, startOrientationIfSupported = false;\n    function deviceOrientationTest(e) {\n      window.removeEventListener('deviceorientation', deviceOrientationTest);\n      if (e && e.alpha !== null && e.beta !== null && e.gamma !== null) {\n        controls.container.appendChild(controls.orientation);\n        orientationSupport = true;\n        if (startOrientationIfSupported)\n          {startOrientation();}\n      } else {\n        orientationSupport = false;\n      }\n    }\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener('deviceorientation', deviceOrientationTest);\n    } else {\n      orientationSupport = false;\n    }\n\n    // Compass\n    var compass = document.createElement('div');\n    compass.className = 'pnlm-compass pnlm-controls pnlm-control';\n    uiContainer.appendChild(compass);\n\n    // Load and process configuration\n    if (initialConfig.firstScene) {\n    // Activate first scene if specified in URL\n      mergeConfig(initialConfig.firstScene);\n    } else if (initialConfig.default && initialConfig.default.firstScene) {\n    // Activate first scene if specified in file\n      mergeConfig(initialConfig.default.firstScene);\n    } else {\n      mergeConfig(null);\n    }\n    processOptions(true);\n\n    /**\n * Initializes viewer.\n * @private\n */\n    function init() {\n    // Display an error for IE 9 as it doesn't work but also doesn't otherwise\n    // show an error (older versions don't work at all)\n    // Based on: http://stackoverflow.com/a/10965203\n      var div = document.createElement(\"div\");\n      div.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n      if (div.getElementsByTagName(\"i\").length == 1) {\n        anError();\n        return;\n      }\n\n      origHfov = config.hfov;\n      origPitch = config.pitch;\n\n      var i, p;\n    \n      if (config.type == 'cubemap') {\n        panoImage = [];\n        for (i = 0; i < 6; i++) {\n          panoImage.push(new Image());\n          panoImage[i].crossOrigin = config.crossOrigin;\n        }\n        infoDisplay.load.lbox.style.display = 'block';\n        infoDisplay.load.lbar.style.display = 'none';\n      } else if (config.type == 'multires') {\n        var c = JSON.parse(JSON.stringify(config.multiRes));    // Deep copy\n        // Avoid \"undefined\" in path, check (optional) multiRes.basePath, too\n        // Use only multiRes.basePath if it's an absolute URL\n        if (config.basePath && config.multiRes.basePath &&\n            !(/^(?:[a-z]+:)?\\/\\//i.test(config.multiRes.basePath))) {\n          c.basePath = config.basePath + config.multiRes.basePath;\n        } else if (config.multiRes.basePath) {\n          c.basePath = config.multiRes.basePath;\n        } else if (config.basePath) {\n          c.basePath = config.basePath;\n        }\n        panoImage = c;\n      } else {\n        if (config.dynamic === true) {\n          panoImage = config.panorama;\n        } else {\n          if (config.panorama === undefined) {\n            anError(config.strings.noPanoramaError);\n            return;\n          }\n          panoImage = new Image();\n        }\n      }\n\n      // Configure image loading\n      if (config.type == 'cubemap') {\n        // Quick loading counter for synchronous loading\n        var itemsToLoad = 6;\n        \n        var onLoad = function() {\n          itemsToLoad--;\n          if (itemsToLoad === 0) {\n            onImageLoad();\n          }\n        };\n        \n        var onError = function(e) {\n          var a = document.createElement('a');\n          a.href = e.target.src;\n          a.textContent = a.href;\n          anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n        };\n        \n        for (i = 0; i < panoImage.length; i++) {\n          p = config.cubeMap[i];\n          if (p == \"null\") { // support partial cubemap image with explicitly empty faces\n            console.log('Will use background instead of missing cubemap face ' + i);\n            onLoad();\n          } else {\n            if (config.basePath && !absoluteURL(p)) {\n              p = config.basePath + p;\n            }\n            panoImage[i].onload = onLoad;\n            panoImage[i].onerror = onError;\n            panoImage[i].src = sanitizeURL(p);\n          }\n        }\n      } else if (config.type == 'multires') {\n        onImageLoad();\n      } else {\n        p = '';\n        if (config.basePath) {\n          p = config.basePath;\n        }\n        \n        if (config.dynamic !== true) {\n          // Still image\n          p = absoluteURL(config.panorama) ? config.panorama : p + config.panorama;\n            \n          panoImage.onload = function() {\n            window.URL.revokeObjectURL(this.src);  // Clean up\n            onImageLoad();\n          };\n            \n          var xhr = new XMLHttpRequest();\n          xhr.onloadend = function() {\n            if (xhr.status != 200) {\n              // Display error if image can't be loaded\n              var a = document.createElement('a');\n              a.href = p;\n              a.textContent = a.href;\n              anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n            }\n            var img = this.response;\n            parseGPanoXMP(img);\n            infoDisplay.load.msg.innerHTML = '';\n          };\n          xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n              // Display progress\n              var percent = e.loaded / e.total * 100;\n              infoDisplay.load.lbarFill.style.width = percent + '%';\n              var unit, numerator, denominator;\n              if (e.total > 1e6) {\n                unit = 'MB';\n                numerator = (e.loaded / 1e6).toFixed(2);\n                denominator = (e.total / 1e6).toFixed(2);\n              } else if (e.total > 1e3) {\n                unit = 'kB';\n                numerator = (e.loaded / 1e3).toFixed(1);\n                denominator = (e.total / 1e3).toFixed(1);\n              } else {\n                unit = 'B';\n                numerator = e.loaded;\n                denominator = e.total;\n              }\n              infoDisplay.load.msg.innerHTML = numerator + ' / ' + denominator + ' ' + unit;\n            } else {\n              // Display loading spinner\n              infoDisplay.load.lbox.style.display = 'block';\n              infoDisplay.load.lbar.style.display = 'none';\n            }\n          };\n          try {\n            xhr.open('GET', p, true);\n          } catch (e) {\n            // Malformed URL\n            anError(config.strings.malformedURLError);\n          }\n          xhr.responseType = 'blob';\n          xhr.setRequestHeader('Accept', 'image/*,*/*;q=0.9');\n          xhr.withCredentials = config.crossOrigin === 'use-credentials';\n          xhr.send();\n        }\n      }\n    \n      if (config.draggable)\n        {uiContainer.classList.add('pnlm-grab');}\n      uiContainer.classList.remove('pnlm-grabbing');\n    }\n\n    /**\n * Test if URL is absolute or relative.\n * @private\n * @param {string} url - URL to test\n * @returns {boolean} True if absolute, else false\n */\n    function absoluteURL(url) {\n    // From http://stackoverflow.com/a/19709846\n      return new RegExp('^(?:[a-z]+:)?//', 'i').test(url) || url[0] == '/' || url.slice(0, 5) == 'blob:';\n    };\n\n    /**\n * Create renderer and initialize event listeners once image is loaded.\n * @private\n */\n    function onImageLoad() {\n      if (!renderer)\n        {renderer = new libpannellum.renderer(renderContainer);}\n\n      // Only add event listeners once\n      if (!listenersAdded) {\n        listenersAdded = true;\n        dragFix.addEventListener('mousedown', onDocumentMouseDown, false);\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\n        document.addEventListener('mouseup', onDocumentMouseUp, false);\n        if (config.mouseZoom) {\n          uiContainer.addEventListener('mousewheel', onDocumentMouseWheel, false);\n          uiContainer.addEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        }\n        if (config.doubleClickZoom) {\n          dragFix.addEventListener('dblclick', onDocumentDoubleClick, false);\n        }\n        uiContainer.addEventListener('mozfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('msfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('fullscreenchange', onFullScreenChange, false);\n        window.addEventListener('resize', onDocumentResize, false);\n        window.addEventListener('orientationchange', onDocumentResize, false);\n        if (!config.disableKeyboardCtrl) {\n          container.addEventListener('keydown', onDocumentKeyPress, false);\n          container.addEventListener('keyup', onDocumentKeyUp, false);\n          container.addEventListener('blur', clearKeys, false);\n        }\n        document.addEventListener('mouseleave', onDocumentMouseUp, false);\n        if (document.documentElement.style.pointerAction === '' &&\n            document.documentElement.style.touchAction === '') {\n          dragFix.addEventListener('pointerdown', onDocumentPointerDown, false);\n          dragFix.addEventListener('pointermove', onDocumentPointerMove, false);\n          dragFix.addEventListener('pointerup', onDocumentPointerUp, false);\n          dragFix.addEventListener('pointerleave', onDocumentPointerUp, false);\n        } else {\n          dragFix.addEventListener('touchstart', onDocumentTouchStart, false);\n          dragFix.addEventListener('touchmove', onDocumentTouchMove, false);\n          dragFix.addEventListener('touchend', onDocumentTouchEnd, false);\n        }\n\n        // Deal with MS pointer events\n        if (window.navigator.pointerEnabled)\n          {container.style.touchAction = 'none';}\n      }\n\n      renderInit();\n      setHfov(config.hfov); // possibly adapt hfov after configuration and canvas is complete; prevents empty space on top or bottom by zomming out too much\n      setTimeout(function(){isTimedOut = true;}, 500);\n    }\n\n    /**\n * Parses Google Photo Sphere XMP Metadata.\n * https://developers.google.com/photo-sphere/metadata/\n * @private\n * @param {Image} image - Image to read XMP metadata from.\n */\n    function parseGPanoXMP(image) {\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function() {\n        var img = reader.result;\n\n        // This awful browser specific test exists because iOS 8 does not work\n        // with non-progressive encoded JPEGs.\n        if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)) {\n          var flagIndex = img.indexOf('\\xff\\xc2');\n          if (flagIndex < 0 || flagIndex > 65536)\n            {anError(config.strings.iOS8WebGLError);}\n        }\n\n        var start = img.indexOf('<x:xmpmeta');\n        if (start > -1 && config.ignoreGPanoXMP !== true) {\n          var xmpData = img.substring(start, img.indexOf('</x:xmpmeta>') + 12);\n            \n          // Extract the requested tag from the XMP data\n          var getTag = function(tag) {\n            var result;\n            if (xmpData.indexOf(tag + '=\"') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '=\"') + tag.length + 2);\n              result = result.substring(0, result.indexOf('\"'));\n            } else if (xmpData.indexOf(tag + '>') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '>') + tag.length + 1);\n              result = result.substring(0, result.indexOf('<'));\n            }\n            if (result !== undefined) {\n              return Number(result);\n            }\n            return null;\n          };\n            \n            // Relevant XMP data\n          var xmp = {\n            fullWidth: getTag('GPano:FullPanoWidthPixels'),\n            croppedWidth: getTag('GPano:CroppedAreaImageWidthPixels'),\n            fullHeight: getTag('GPano:FullPanoHeightPixels'),\n            croppedHeight: getTag('GPano:CroppedAreaImageHeightPixels'),\n            topPixels: getTag('GPano:CroppedAreaTopPixels'),\n            heading: getTag('GPano:PoseHeadingDegrees'),\n            horizonPitch: getTag('GPano:PosePitchDegrees'),\n            horizonRoll: getTag('GPano:PoseRollDegrees')\n          };\n            \n          if (xmp.fullWidth !== null && xmp.croppedWidth !== null &&\n                xmp.fullHeight !== null && xmp.croppedHeight !== null &&\n                xmp.topPixels !== null) {\n                \n            // Set up viewer using GPano XMP data\n            if (specifiedPhotoSphereExcludes.indexOf('haov') < 0)\n              {config.haov = xmp.croppedWidth / xmp.fullWidth * 360;}\n            if (specifiedPhotoSphereExcludes.indexOf('vaov') < 0)\n              {config.vaov = xmp.croppedHeight / xmp.fullHeight * 180;}\n            if (specifiedPhotoSphereExcludes.indexOf('vOffset') < 0)\n              {config.vOffset = ((xmp.topPixels + xmp.croppedHeight / 2) / xmp.fullHeight - 0.5) * -180;}\n            if (xmp.heading !== null && specifiedPhotoSphereExcludes.indexOf('northOffset') < 0) {\n              // TODO: make sure this works correctly for partial panoramas\n              config.northOffset = xmp.heading;\n              if (config.compass !== false) {\n                config.compass = true;\n              }\n            }\n            if (xmp.horizonPitch !== null && xmp.horizonRoll !== null) {\n              if (specifiedPhotoSphereExcludes.indexOf('horizonPitch') < 0)\n                {config.horizonPitch = xmp.horizonPitch;}\n              if (specifiedPhotoSphereExcludes.indexOf('horizonRoll') < 0)\n                {config.horizonRoll = xmp.horizonRoll;}\n            }\n                \n            // TODO: add support for initial view settings\n          }\n        }\n        \n        // Load panorama\n        panoImage.src = window.URL.createObjectURL(image);\n      });\n      if (reader.readAsBinaryString !== undefined)\n        {reader.readAsBinaryString(image);}\n      else\n        {reader.readAsText(image);}\n    }\n\n    /**\n * Displays an error message.\n * @private\n * @param {string} errorMsg - Error message to display. If not specified, a\n *      generic WebGL error is displayed.\n */\n    function anError(errorMsg) {\n      if (errorMsg === undefined)\n        {errorMsg = config.strings.genericWebGLError;}\n      infoDisplay.errorMsg.innerHTML = '<p>' + errorMsg + '</p>';\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'none';\n      infoDisplay.errorMsg.style.display = 'table';\n      error = true;\n      renderContainer.style.display = 'none';\n      fireEvent('error', errorMsg);\n    }\n\n    /**\n * Hides error message display.\n * @private\n */\n    function clearError() {\n      if (error) {\n        infoDisplay.load.box.style.display = 'none';\n        infoDisplay.errorMsg.style.display = 'none';\n        error = false;\n        fireEvent('errorcleared');\n      }\n    }\n\n    /**\n * Displays about message.\n * @private\n * @param {MouseEvent} event - Right click location\n */\n    function aboutMessage(event) {\n      var pos = mousePosition(event);\n      aboutMsg.style.left = pos.x + 'px';\n      aboutMsg.style.top = pos.y + 'px';\n      clearTimeout(aboutMessage.t1);\n      clearTimeout(aboutMessage.t2);\n      aboutMsg.style.display = 'block';\n      aboutMsg.style.opacity = 1;\n      aboutMessage.t1 = setTimeout(function() {aboutMsg.style.opacity = 0;}, 2000);\n      aboutMessage.t2 = setTimeout(function() {aboutMsg.style.display = 'none';}, 2500);\n      event.preventDefault();\n    }\n\n    /**\n * Calculate mouse position relative to top left of viewer container.\n * @private\n * @param {MouseEvent} event - Mouse event to use in calculation\n * @returns {Object} Calculated X and Y coordinates\n */\n    function mousePosition(event) {\n      var bounds = container.getBoundingClientRect();\n      var pos = {};\n      pos.x = event.clientX - bounds.left;\n      pos.y = event.clientY - bounds.top;\n      return pos;\n    }\n\n    /**\n * Event handler for mouse clicks. Initializes panning. Prints center and click\n * location coordinates when hot spot debugging is enabled.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentMouseDown(event) {\n    // Override default action\n      event.preventDefault();\n      // But not all of it\n      container.focus();\n    \n      // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n    \n      // Calculate mouse position relative to top left of viewer container\n      var pos = mousePosition(event);\n\n      // Log pitch / yaw of mouse click when debugging / placing hot spots\n      if (config.hotSpotDebug) {\n        var coords = mouseEventToCoords(event);\n        console.log('Pitch: ' + coords[0] + ', Yaw: ' + coords[1] + ', Center Pitch: ' +\n            config.pitch + ', Center Yaw: ' + config.yaw + ', HFOV: ' + config.hfov);\n      }\n    \n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownPointerX = pos.x;\n      onPointerDownPointerY = pos.y;\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n    \n      uiContainer.classList.add('pnlm-grabbing');\n      uiContainer.classList.remove('pnlm-grab');\n    \n      fireEvent('mousedown', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for double clicks. Zooms in at clicked location\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentDoubleClick(event) {\n      if (config.minHfov === config.hfov) {\n        _this.setHfov(origHfov, 1000);\n      } else {\n        var coords = mouseEventToCoords(event);\n        _this.lookAt(coords[0], coords[1], config.minHfov, 1000);\n      }\n    }\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    function mouseEventToCoords(event) {\n      var pos = mousePosition(event);\n      var canvas = renderer.getCanvas();\n      var canvasWidth = canvas.clientWidth,\n        canvasHeight = canvas.clientHeight;\n      var x = pos.x / canvasWidth * 2 - 1;\n      var y = (1 - pos.y / canvasHeight * 2) * canvasHeight / canvasWidth;\n      var focal = 1 / Math.tan(config.hfov * Math.PI / 360);\n      var s = Math.sin(config.pitch * Math.PI / 180);\n      var c = Math.cos(config.pitch * Math.PI / 180);\n      var a = focal * c - y * s;\n      var root = Math.sqrt(x*x + a*a);\n      var pitch = Math.atan((y * c + focal * s) / root) * 180 / Math.PI;\n      var yaw = Math.atan2(x / root, a / root) * 180 / Math.PI + config.yaw;\n      if (yaw < -180)\n        {yaw += 360;}\n      if (yaw > 180)\n        {yaw -= 360;}\n      return [pitch, yaw];\n    }\n\n    /**\n * Event handler for mouse moves. Pans center of view.\n * @private\n * @param {MouseEvent} event - Document mouse move event.\n */\n    function onDocumentMouseMove(event) {\n      if (isUserInteracting && loaded) {\n        latestInteraction = Date.now();\n        var canvas = renderer.getCanvas();\n        var canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var pos = mousePosition(event);\n        //TODO: This still isn't quite right\n        var yaw = ((Math.atan(onPointerDownPointerX / canvasWidth * 2 - 1) - Math.atan(pos.x / canvasWidth * 2 - 1)) * 180 / Math.PI * config.hfov / 90) + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        \n        var vfov = 2 * Math.atan(Math.tan(config.hfov/360*Math.PI) * canvasHeight / canvasWidth) * 180 / Math.PI;\n        \n        var pitch = ((Math.atan(pos.y / canvasHeight * 2 - 1) - Math.atan(onPointerDownPointerY / canvasHeight * 2 - 1)) * 180 / Math.PI * vfov / 90) + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for mouse up events. Stops panning.\n * @private\n */\n    function onDocumentMouseUp(event) {\n      if (!isUserInteracting) {\n        return;\n      }\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 15) {\n        // Prevents jump when user rapidly moves mouse, stops, and then\n        // releases the mouse button\n        speed.pitch = speed.yaw = 0;\n      }\n      uiContainer.classList.add('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n      latestInteraction = Date.now();\n\n      fireEvent('mouseup', event);\n    }\n\n    /**\n * Event handler for touches. Initializes panning if one touch or zooming if\n * two touches.\n * @private\n * @param {TouchEvent} event - Document touch start event.\n */\n    function onDocumentTouchStart(event) {\n    // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      // Calculate touch position relative to top left of viewer container\n      var pos0 = mousePosition(event.targetTouches[0]);\n\n      onPointerDownPointerX = pos0.x;\n      onPointerDownPointerY = pos0.y;\n    \n      if (event.targetTouches.length == 2) {\n        // Down pointer is the center of the two fingers\n        var pos1 = mousePosition(event.targetTouches[1]);\n        onPointerDownPointerX += (pos1.x - pos0.x) * 0.5;\n        onPointerDownPointerY += (pos1.y - pos0.y) * 0.5;\n        onPointerDownPointerDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                             (pos0.y - pos1.y) * (pos0.y - pos1.y));\n      }\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n\n      fireEvent('touchstart', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for touch movements. Pans center of view if one touch or\n * adjusts zoom if two touches.\n * @private\n * @param {TouchEvent} event - Document touch move event.\n */\n    function onDocumentTouchMove(event) {\n      if (!config.draggable) {\n        return;\n      }\n\n      // Override default action\n      event.preventDefault();\n      if (loaded) {\n        latestInteraction = Date.now();\n      }\n      if (isUserInteracting && loaded) {\n        var pos0 = mousePosition(event.targetTouches[0]);\n        var clientX = pos0.x;\n        var clientY = pos0.y;\n        \n        if (event.targetTouches.length == 2 && onPointerDownPointerDist != -1) {\n          var pos1 = mousePosition(event.targetTouches[1]);\n          clientX += (pos1.x - pos0.x) * 0.5;\n          clientY += (pos1.y - pos0.y) * 0.5;\n          var clientDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                       (pos0.y - pos1.y) * (pos0.y - pos1.y));\n          setHfov(config.hfov + (onPointerDownPointerDist - clientDist) * 0.1);\n          onPointerDownPointerDist = clientDist;\n        }\n\n        // The smaller the config.hfov value (the more zoomed-in the user is), the faster\n        // yaw/pitch are perceived to change on one-finger touchmove (panning) events and vice versa.\n        // To improve usability at both small and large zoom levels (config.hfov values)\n        // we introduce a dynamic pan speed coefficient.\n        //\n        // Currently this seems to *roughly* keep initial drag/pan start position close to\n        // the user's finger while panning regardless of zoom level / config.hfov value.\n        var touchmovePanSpeedCoeff = (config.hfov / 360) * config.touchPanSpeedCoeffFactor;\n\n        var yaw = (onPointerDownPointerX - clientX) * touchmovePanSpeedCoeff + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n\n        var pitch = (clientY - onPointerDownPointerY) * touchmovePanSpeedCoeff + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for end of touches. Stops panning and/or zooming.\n * @private\n */\n    function onDocumentTouchEnd() {\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 150) {\n        speed.pitch = speed.yaw = 0;\n      }\n      onPointerDownPointerDist = -1;\n      latestInteraction = Date.now();\n\n      fireEvent('touchend', event);\n    }\n\n    var pointerIDs = [],\n      pointerCoordinates = [];\n    /**\n * Event handler for touch starts in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer down event.\n */\n    function onDocumentPointerDown(event) {\n      if (event.pointerType == 'touch') {\n        pointerIDs.push(event.pointerId);\n        pointerCoordinates.push({ clientX: event.clientX, clientY: event.clientY });\n        event.targetTouches = pointerCoordinates;\n        onDocumentTouchStart(event);\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for touch moves in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer move event.\n */\n    function onDocumentPointerMove(event) {\n      if (event.pointerType == 'touch') {\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i]) {\n            pointerCoordinates[i].clientX = event.clientX;\n            pointerCoordinates[i].clientY = event.clientY;\n            event.targetTouches = pointerCoordinates;\n            onDocumentTouchMove(event);\n            event.preventDefault();\n            return;\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for touch ends in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer up event.\n */\n    function onDocumentPointerUp(event) {\n      if (event.pointerType == 'touch') {\n        var defined = false;\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i])\n            {pointerIDs[i] = undefined;}\n          if (pointerIDs[i])\n            {defined = true;}\n        }\n        if (!defined) {\n          pointerIDs = [];\n          pointerCoordinates = [];\n          onDocumentTouchEnd();\n        }\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for mouse wheel. Changes zoom.\n * @private\n * @param {WheelEvent} event - Document mouse wheel event.\n */\n    function onDocumentMouseWheel(event) {\n    // Only do something if the panorama is loaded and mouse wheel zoom is enabled\n      if (!loaded || (config.mouseZoom == 'fullscreenonly' && !fullscreenActive)) {\n        return;\n      }\n\n      event.preventDefault();\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      if (event.wheelDeltaY) {\n        // WebKit\n        setHfov(config.hfov - event.wheelDeltaY * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        // Opera / Explorer 9\n        setHfov(config.hfov - event.wheelDelta * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.detail) {\n        // Firefox\n        setHfov(config.hfov + event.detail * 1.5);\n        speed.hfov = event.detail > 0 ? 1 : -1;\n      }\n    \n      animateInit();\n    }\n\n    /**\n * Event handler for key presses. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key press event.\n */\n    function onDocumentKeyPress(event) {\n    // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      stopOrientation();\n      config.roll = 0;\n\n      // Record key pressed\n      var keynumber = event.which || event.keycode;\n\n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // If escape key is pressed\n      if (keynumber == 27) {\n        // If in fullscreen mode\n        if (fullscreenActive) {\n          toggleFullscreen();\n        }\n      } else {\n        // Change key\n        changeKey(keynumber, true);\n      }\n    }\n\n    /**\n * Clears list of currently pressed keys.\n * @private\n */\n    function clearKeys() {\n      for (var i = 0; i < 10; i++) {\n        keysDown[i] = false;\n      }\n    }\n\n    /**\n * Event handler for key releases. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key up event.\n */\n    function onDocumentKeyUp(event) {\n    // Record key pressed\n      var keynumber = event.which || event.keycode;\n    \n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // Change key\n      changeKey(keynumber, false);\n    }\n\n    /**\n * Updates list of currently pressed keys.\n * @private\n * @param {number} keynumber - Key number.\n * @param {boolean} value - Whether or not key is pressed.\n */\n    function changeKey(keynumber, value) {\n      var keyChanged = false;\n      switch (keynumber) {\n        // If minus key is released\n        case 109: case 189: case 17: case 173:\n          if (keysDown[0] != value) { keyChanged = true; }\n          keysDown[0] = value; break;\n        \n        // If plus key is released\n        case 107: case 187: case 16: case 61:\n          if (keysDown[1] != value) { keyChanged = true; }\n          keysDown[1] = value; break;\n        \n        // If up arrow is released\n        case 38:\n          if (keysDown[2] != value) { keyChanged = true; }\n          keysDown[2] = value; break;\n        \n        // If \"w\" is released\n        case 87:\n          if (keysDown[6] != value) { keyChanged = true; }\n          keysDown[6] = value; break;\n        \n        // If down arrow is released\n        case 40:\n          if (keysDown[3] != value) { keyChanged = true; }\n          keysDown[3] = value; break;\n        \n        // If \"s\" is released\n        case 83:\n          if (keysDown[7] != value) { keyChanged = true; }\n          keysDown[7] = value; break;\n        \n        // If left arrow is released\n        case 37:\n          if (keysDown[4] != value) { keyChanged = true; }\n          keysDown[4] = value; break;\n        \n        // If \"a\" is released\n        case 65:\n          if (keysDown[8] != value) { keyChanged = true; }\n          keysDown[8] = value; break;\n        \n        // If right arrow is released\n        case 39:\n          if (keysDown[5] != value) { keyChanged = true; }\n          keysDown[5] = value; break;\n        \n        // If \"d\" is released\n        case 68:\n          if (keysDown[9] != value) { keyChanged = true; }\n          keysDown[9] = value;\n      }\n    \n      if (keyChanged && value) {\n        if (typeof performance !== 'undefined' && performance.now()) {\n          prevTime = performance.now();\n        } else {\n          prevTime = Date.now();\n        }\n        animateInit();\n      }\n    }\n\n    /**\n * Pans and/or zooms panorama based on currently pressed keys. Also handles\n * panorama \"inertia\" and auto rotation.\n * @private\n */\n    function keyRepeat() {\n    // Only do something if the panorama is loaded\n      if (!loaded) {\n        return;\n      }\n\n      var isKeyDown = false;\n\n      var prevPitch = config.pitch;\n      var prevYaw = config.yaw;\n      var prevZoom = config.hfov;\n    \n      var newTime;\n      if (typeof performance !== 'undefined' && performance.now()) {\n        newTime = performance.now();\n      } else {\n        newTime = Date.now();\n      }\n      if (prevTime === undefined) {\n        prevTime = newTime;\n      }\n      var diff = (newTime - prevTime) * config.hfov / 1700;\n      diff = Math.min(diff, 1.0);\n    \n      // If minus key is down\n      if (keysDown[0] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 + 0.5) * diff);\n        isKeyDown = true;\n      }\n    \n      // If plus key is down\n      if (keysDown[1] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 - 0.2) * diff);\n        isKeyDown = true;\n      }\n    \n      // If up arrow or \"w\" is down\n      if (keysDown[2] || keysDown[6]) {\n        // Pan up\n        config.pitch += (speed.pitch * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If down arrow or \"s\" is down\n      if (keysDown[3] || keysDown[7]) {\n        // Pan down\n        config.pitch += (speed.pitch * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If left arrow or \"a\" is down\n      if (keysDown[4] || keysDown[8]) {\n        // Pan left\n        config.yaw += (speed.yaw * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If right arrow or \"d\" is down\n      if (keysDown[5] || keysDown[9]) {\n        // Pan right\n        config.yaw += (speed.yaw * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n\n      if (isKeyDown)\n        {latestInteraction = Date.now();}\n\n      // If auto-rotate\n      var inactivityInterval = Date.now() - latestInteraction;\n      if (config.autoRotate) {\n        // Pan\n        if (newTime - prevTime > 0.001) {\n          var timeDiff = (newTime - prevTime) / 1000;\n          var yawDiff = (speed.yaw / timeDiff * diff - config.autoRotate * 0.2) * timeDiff;\n          yawDiff = (-config.autoRotate > 0 ? 1 : -1) * Math.min(Math.abs(config.autoRotate * timeDiff), Math.abs(yawDiff));\n          config.yaw += yawDiff;\n        }\n        \n        // Deal with stopping auto rotation after a set delay\n        if (config.autoRotateStopDelay) {\n          config.autoRotateStopDelay -= newTime - prevTime;\n          if (config.autoRotateStopDelay <= 0) {\n            config.autoRotateStopDelay = false;\n            autoRotateSpeed = config.autoRotate;\n            config.autoRotate = 0;\n          }\n        }\n      }\n\n      // Animated moves\n      if (animatedMove.pitch) {\n        animateMove('pitch');\n        prevPitch = config.pitch;\n      }\n      if (animatedMove.yaw) {\n        animateMove('yaw');\n        prevYaw = config.yaw;\n      }\n      if (animatedMove.hfov) {\n        animateMove('hfov');\n        prevZoom = config.hfov;\n      }\n\n      // \"Inertia\"\n      if (diff > 0 && !config.autoRotate) {\n        // \"Friction\"\n        var friction = 0.85;\n        \n        // Yaw\n        if (!keysDown[4] && !keysDown[5] && !keysDown[8] && !keysDown[9] && !animatedMove.yaw) {\n          config.yaw += speed.yaw * diff * friction;\n        }\n        // Pitch\n        if (!keysDown[2] && !keysDown[3] && !keysDown[6] && !keysDown[7] && !animatedMove.pitch) {\n          config.pitch += speed.pitch * diff * friction;\n        }\n        // Zoom\n        if (!keysDown[0] && !keysDown[1] && !animatedMove.hfov) {\n          setHfov(config.hfov + speed.hfov * diff * friction);\n        }\n      }\n\n      prevTime = newTime;\n      if (diff > 0) {\n        speed.yaw = speed.yaw * 0.8 + (config.yaw - prevYaw) / diff * 0.2;\n        speed.pitch = speed.pitch * 0.8 + (config.pitch - prevPitch) / diff * 0.2;\n        speed.hfov = speed.hfov * 0.8 + (config.hfov - prevZoom) / diff * 0.2;\n        \n        // Limit speed\n        var maxSpeed = config.autoRotate ? Math.abs(config.autoRotate) : 5;\n        speed.yaw = Math.min(maxSpeed, Math.max(speed.yaw, -maxSpeed));\n        speed.pitch = Math.min(maxSpeed, Math.max(speed.pitch, -maxSpeed));\n        speed.hfov = Math.min(maxSpeed, Math.max(speed.hfov, -maxSpeed));\n      }\n    \n      // Stop movement if opposite controls are pressed\n      if (keysDown[0] && keysDown[1]) {\n        speed.hfov = 0;\n      }\n      if ((keysDown[2] || keysDown[6]) && (keysDown[3] || keysDown[7])) {\n        speed.pitch = 0;\n      }\n      if ((keysDown[4] || keysDown[8]) && (keysDown[5] || keysDown[9])) {\n        speed.yaw = 0;\n      }\n    }\n\n    /**\n * Animates moves.\n * @param {string} axis - Axis to animate\n * @private\n */\n    function animateMove(axis) {\n      var t = animatedMove[axis];\n      var normTime = Math.min(1, Math.max((Date.now() - t.startTime) / 1000 / (t.duration / 1000), 0));\n      var result = t.startPosition + config.animationTimingFunction(normTime) * (t.endPosition - t.startPosition);\n      if ((t.endPosition > t.startPosition && result >= t.endPosition) ||\n        (t.endPosition < t.startPosition && result <= t.endPosition) ||\n        t.endPosition === t.startPosition) {\n        result = t.endPosition;\n        speed[axis] = 0;\n        var callback = animatedMove[axis].callback,\n          callbackArgs = animatedMove[axis].callbackArgs;\n        delete animatedMove[axis];\n        if (typeof callback === 'function')\n          {callback(callbackArgs);}\n      }\n      config[axis] = result;\n    }\n\n    /**\n * @param {number} t - Normalized time in animation\n * @return {number} Position in animation\n * @private\n */\n    function timingFunction(t) {\n    // easeInOutQuad from https://gist.github.com/gre/1650294\n      return t < 0.5 ? 2*t*t : -1+(4-2*t)*t;\n    }\n\n    /**\n * Event handler for document resizes. Updates viewer size and rerenders view.\n * @private\n */\n    function onDocumentResize() {\n    // Resize panorama renderer (moved to onFullScreenChange)\n    //renderer.resize();\n    //animateInit();\n\n    // Kludge to deal with WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=93525\n      onFullScreenChange();\n    }\n\n    /**\n * Initializes animation.\n * @private\n */\n    function animateInit() {\n      if (animating) {\n        return;\n      }\n      animating = true;\n      animate();\n    }\n\n    /**\n * Animates view, using requestAnimationFrame to trigger rendering.\n * @private\n */\n    function animate() {\n      render();\n      if (autoRotateStart)\n        {clearTimeout(autoRotateStart);}\n      if (isUserInteracting || orientation === true) {\n        requestAnimationFrame(animate);\n      } else if (keysDown[0] || keysDown[1] || keysDown[2] || keysDown[3] ||\n        keysDown[4] || keysDown[5] || keysDown[6] || keysDown[7] ||\n        keysDown[8] || keysDown[9] || config.autoRotate ||\n        animatedMove.pitch || animatedMove.yaw || animatedMove.hfov ||\n        Math.abs(speed.yaw) > 0.01 || Math.abs(speed.pitch) > 0.01 ||\n        Math.abs(speed.hfov) > 0.01) {\n\n        keyRepeat();\n        if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed &&\n            Date.now() - latestInteraction > config.autoRotateInactivityDelay &&\n            !config.autoRotate) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n        }\n        requestAnimationFrame(animate);\n      } else if (renderer && (renderer.isLoading() || (config.dynamic === true && update))) {\n        requestAnimationFrame(animate);\n      } else {\n        animating = false;\n        prevTime = undefined;\n        var autoRotateStartTime = config.autoRotateInactivityDelay -\n            (Date.now() - latestInteraction);\n        if (autoRotateStartTime > 0) {\n          autoRotateStart = setTimeout(function() {\n            config.autoRotate = autoRotateSpeed;\n            _this.lookAt(origPitch, undefined, origHfov, 3000);\n            animateInit();\n          }, autoRotateStartTime);\n        } else if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n          animateInit();\n        }\n      }\n    }\n\n    /**\n * Renders panorama view.\n * @private\n */\n    function render() {\n      var tmpyaw;\n\n      if (loaded) {\n        if (config.yaw > 180) {\n          config.yaw -= 360;\n        } else if (config.yaw < -180) {\n          config.yaw += 360;\n        }\n\n        // Keep a tmp value of yaw for autoRotate comparison later\n        tmpyaw = config.yaw;\n\n        // Optionally avoid showing background (empty space) on left or right by adapting min/max yaw\n        var hoffcut = 0,\n          voffcut = 0;\n        if (config.avoidShowingBackground) {\n          var canvas = renderer.getCanvas(),\n            hfov2 = config.hfov / 2,\n            vfov2 = Math.atan2(Math.tan(hfov2 / 180 * Math.PI), (canvas.width / canvas.height)) * 180 / Math.PI,\n            transposed = config.vaov > config.haov;\n          if (transposed) {\n            voffcut = vfov2 * (1 - Math.min(Math.cos((config.pitch - hfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + hfov2) / 180 * Math.PI)));\n          } else {\n            hoffcut = hfov2 * (1 - Math.min(Math.cos((config.pitch - vfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + vfov2) / 180 * Math.PI)));\n          }\n        }\n\n        // Ensure the yaw is within min and max allowed\n        var yawRange = config.maxYaw - config.minYaw,\n          minYaw = -180,\n          maxYaw = 180;\n        if (yawRange < 360) {\n          minYaw = config.minYaw + config.hfov / 2 + hoffcut;\n          maxYaw = config.maxYaw - config.hfov / 2 - hoffcut;\n          if (yawRange < config.hfov) {\n            // Lock yaw to average of min and max yaw when both can be seen at once\n            minYaw = maxYaw = (minYaw + maxYaw) / 2;\n          }\n          config.yaw = Math.max(minYaw, Math.min(maxYaw, config.yaw));\n        }\n        \n        // Check if we autoRotate in a limited by min and max yaw\n        // If so reverse direction\n        if (config.autoRotate !== false && tmpyaw != config.yaw &&\n            prevTime !== undefined) { // this condition prevents changing the direction initially\n          config.autoRotate *= -1;\n        }\n\n        // Ensure the calculated pitch is within min and max allowed\n        var canvas = renderer.getCanvas();\n        var vfov = 2 * Math.atan(Math.tan(config.hfov / 180 * Math.PI * 0.5) /\n            (canvas.width / canvas.height)) / Math.PI * 180;\n        var minPitch = config.minPitch + vfov / 2,\n          maxPitch = config.maxPitch - vfov / 2;\n        var pitchRange = config.maxPitch - config.minPitch;\n        if (pitchRange < vfov) {\n          // Lock pitch to average of min and max pitch when both can be seen at once\n          minPitch = maxPitch = (minPitch + maxPitch) / 2;\n        }\n        if (isNaN(minPitch))\n          {minPitch = -90;}\n        if (isNaN(maxPitch))\n          {maxPitch = 90;}\n        config.pitch = Math.max(minPitch, Math.min(maxPitch, config.pitch));\n        \n        renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { roll: config.roll * Math.PI / 180 });\n        \n        renderHotSpots();\n        \n        // Update compass\n        if (config.compass) {\n          compass.style.transform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n          compass.style.webkitTransform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n        }\n        \n        if (config.onRender) {\n          config.onRender();\n        }\n      }\n    }\n\n    /**\n * Creates a new quaternion.\n * @private\n * @constructor\n * @param {Number} w - W value\n * @param {Number} x - X value\n * @param {Number} y - Y value\n * @param {Number} z - Z value\n */\n    function Quaternion(w, x, y, z) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n\n    /**\n * Multiplies quaternions.\n * @private\n * @param {Quaternion} q - Quaternion to multiply\n * @returns {Quaternion} Result of multiplication\n */\n    Quaternion.prototype.multiply = function(q) {\n      return new Quaternion(this.w*q.w - this.x*q.x - this.y*q.y - this.z*q.z,\n        this.x*q.w + this.w*q.x + this.y*q.z - this.z*q.y,\n        this.y*q.w + this.w*q.y + this.z*q.x - this.x*q.z,\n        this.z*q.w + this.w*q.z + this.x*q.y - this.y*q.x);\n    };\n\n    /**\n * Converts quaternion to Euler angles.\n * @private\n * @returns {Number[]} [phi angle, theta angle, psi angle]\n */\n    Quaternion.prototype.toEulerAngles = function() {\n      var phi = Math.atan2(2 * (this.w * this.x + this.y * this.z),\n          1 - 2 * (this.x * this.x + this.y * this.y)),\n        theta = Math.asin(2 * (this.w * this.y - this.z * this.x)),\n        psi = Math.atan2(2 * (this.w * this.z + this.x * this.y),\n          1 - 2 * (this.y * this.y + this.z * this.z));\n      return [phi, theta, psi];\n    };\n\n    /**\n * Converts device orientation API Tait-Bryan angles to a quaternion.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function taitBryanToQuaternion(alpha, beta, gamma) {\n      var r = [beta ? beta * Math.PI / 180 / 2 : 0,\n        gamma ? gamma * Math.PI / 180 / 2 : 0,\n        alpha ? alpha * Math.PI / 180 / 2 : 0];\n      var c = [Math.cos(r[0]), Math.cos(r[1]), Math.cos(r[2])],\n        s = [Math.sin(r[0]), Math.sin(r[1]), Math.sin(r[2])];\n\n      return new Quaternion(c[0]*c[1]*c[2] - s[0]*s[1]*s[2],\n        s[0]*c[1]*c[2] - c[0]*s[1]*s[2],\n        c[0]*s[1]*c[2] + s[0]*c[1]*s[2],\n        c[0]*c[1]*s[2] + s[0]*s[1]*c[2]);\n    }\n\n    /**\n * Computes current device orientation quaternion from device orientation API\n * Tait-Bryan angles.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function computeQuaternion(alpha, beta, gamma) {\n    // Convert Tait-Bryan angles to quaternion\n      var quaternion = taitBryanToQuaternion(alpha, beta, gamma);\n      // Apply world transform\n      quaternion = quaternion.multiply(new Quaternion(Math.sqrt(0.5), -Math.sqrt(0.5), 0, 0));\n      // Apply screen transform\n      var angle = window.orientation ? -window.orientation * Math.PI / 180 / 2 : 0;\n      return quaternion.multiply(new Quaternion(Math.cos(angle), 0, -Math.sin(angle), 0));\n    }\n\n    /**\n * Event handler for device orientation API. Controls pointing.\n * @private\n * @param {DeviceOrientationEvent} event - Device orientation event.\n */\n    function orientationListener(e) {\n      var q = computeQuaternion(e.alpha, e.beta, e.gamma).toEulerAngles();\n      if (typeof(orientation) === 'number' && orientation < 10) {\n        // This kludge is necessary because iOS sometimes provides a few stale\n        // device orientation events when the listener is removed and then\n        // readded. Thus, we skip the first 10 events to prevent this from\n        // causing problems.\n        orientation += 1;\n      } else if (orientation === 10) {\n        // Record starting yaw to prevent jumping\n        orientationYawOffset = q[2] / Math.PI * 180 + config.yaw;\n        orientation = true;\n        requestAnimationFrame(animate);\n      } else {\n        config.pitch = q[0] / Math.PI * 180;\n        config.roll = -q[1] / Math.PI * 180;\n        config.yaw = -q[2] / Math.PI * 180 + orientationYawOffset;\n      }\n    }\n\n    /**\n * Initializes renderer.\n * @private\n */\n    function renderInit() {\n      try {\n        var params = {};\n        if (config.horizonPitch !== undefined)\n          {params.horizonPitch = config.horizonPitch * Math.PI / 180;}\n        if (config.horizonRoll !== undefined)\n          {params.horizonRoll = config.horizonRoll * Math.PI / 180;}\n        if (config.backgroundColor !== undefined)\n          {params.backgroundColor = config.backgroundColor;}\n        renderer.init(panoImage, config.type, config.dynamic, config.haov * Math.PI / 180, config.vaov * Math.PI / 180, config.vOffset * Math.PI / 180, renderInitCallback, params);\n        if (config.dynamic !== true) {\n          // Allow image to be garbage collected\n          panoImage = undefined;\n        }\n      } catch (event) {\n        // Panorama not loaded\n        \n        // Display error if there is a bad texture\n        if (event.type == 'webgl error' || event.type == 'no webgl') {\n          anError();\n        } else if (event.type == 'webgl size error') {\n          anError(config.strings.textureSizeError.replace('%s', event.width).replace('%s', event.maxWidth));\n        } else {\n          anError(config.strings.unknownError);\n          throw event;\n        }\n      }\n    }\n\n    /**\n * Triggered when render initialization finishes. Handles fading between\n * scenes as well as showing the compass and hotspots and hiding the loading\n * display.\n * @private\n */\n    function renderInitCallback() {\n    // Fade if specified\n      if (config.sceneFadeDuration && renderer.fadeImg !== undefined) {\n        renderer.fadeImg.style.opacity = 0;\n        // Remove image\n        var fadeImg = renderer.fadeImg;\n        delete renderer.fadeImg;\n        setTimeout(function() {\n          renderContainer.removeChild(fadeImg);\n          fireEvent('scenechangefadedone');\n        }, config.sceneFadeDuration);\n      }\n    \n      // Show compass if applicable\n      if (config.compass) {\n        compass.style.display = 'inline';\n      } else {\n        compass.style.display = 'none';\n      }\n    \n      // Show hotspots\n      createHotSpots();\n    \n      // Hide loading display\n      infoDisplay.load.box.style.display = 'none';\n      if (preview !== undefined) {\n        renderContainer.removeChild(preview);\n        preview = undefined;\n      }\n      loaded = true;\n\n      fireEvent('load');\n    \n      animateInit();\n    }\n\n    /**\n * Creates hot spot element for the current scene.\n * @private\n * @param {Object} hs - The configuration for the hotspot\n */\n    function createHotSpot(hs) {\n    // Make sure hot spot pitch and yaw are numbers\n      hs.pitch = Number(hs.pitch) || 0;\n      hs.yaw = Number(hs.yaw) || 0;\n\n      var div = document.createElement('div');\n      div.className = 'pnlm-hotspot-base';\n      if (hs.cssClass)\n        {div.className += ' ' + hs.cssClass;}\n      else\n        {div.className += ' pnlm-hotspot pnlm-sprite pnlm-' + escapeHTML(hs.type);}\n\n      var span = document.createElement('span');\n      if (hs.text)\n        {span.innerHTML = escapeHTML(hs.text);}\n\n      var a;\n      if (hs.video) {\n        var video = document.createElement('video'),\n          p = hs.video;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        video.src = sanitizeURL(p);\n        video.controls = true;\n        video.style.width = hs.width + 'px';\n        renderContainer.appendChild(div);\n        span.appendChild(video);\n      } else if (hs.image) {\n        var p = hs.image;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL ? hs.URL : p);\n        a.target = '_blank';\n        span.appendChild(a);\n        var image = document.createElement('img');\n        image.src = sanitizeURL(p);\n        image.style.width = hs.width + 'px';\n        image.style.paddingTop = '5px';\n        renderContainer.appendChild(div);\n        a.appendChild(image);\n        span.style.maxWidth = 'initial';\n      } else if (hs.URL) {\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL);\n        a.target = '_blank';\n        renderContainer.appendChild(a);\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n        a.appendChild(div);\n      } else {\n        if (hs.sceneId) {\n          div.onclick = div.ontouchend = function() {\n            if (!div.clicked) {\n              div.clicked = true;\n              loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw, hs.targetHfov);\n            }\n            return false;\n          };\n          div.className += ' pnlm-pointer';\n          span.className += ' pnlm-pointer';\n        }\n        renderContainer.appendChild(div);\n      }\n\n      if (hs.createTooltipFunc) {\n        hs.createTooltipFunc(div, hs.createTooltipArgs);\n      } else if (hs.text || hs.video || hs.image) {\n        div.classList.add('pnlm-tooltip');\n        div.appendChild(span);\n        span.style.width = span.scrollWidth - 20 + 'px';\n        span.style.marginLeft = -(span.scrollWidth - div.offsetWidth) / 2 + 'px';\n        span.style.marginTop = -span.scrollHeight - 12 + 'px';\n      }\n      if (hs.clickHandlerFunc) {\n        div.addEventListener('click', function(e) {\n          hs.clickHandlerFunc(e, hs.clickHandlerArgs);\n        }, 'false');\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n      }\n      hs.div = div;\n    };\n\n    /**\n * Creates hot spot elements for the current scene.\n * @private\n */\n    function createHotSpots() {\n      if (hotspotsCreated) {return;}\n\n      if (!config.hotSpots) {\n        config.hotSpots = [];\n      } else {\n        // Sort by pitch so tooltip is never obscured by another hot spot\n        config.hotSpots = config.hotSpots.sort(function(a, b) {\n          return a.pitch < b.pitch;\n        });\n        config.hotSpots.forEach(createHotSpot);\n      }\n      hotspotsCreated = true;\n      renderHotSpots();\n    }\n\n    /**\n * Destroys currently created hot spot elements.\n * @private\n */\n    function destroyHotSpots() {\n      var hs = config.hotSpots;\n      hotspotsCreated = false;\n      delete config.hotSpots;\n      if (hs) {\n        for (var i = 0; i < hs.length; i++) {\n          var current = hs[i].div;\n          while (current.parentNode != renderContainer) {\n            current = current.parentNode;\n          }\n          renderContainer.removeChild(current);\n          delete hs[i].div;\n        }\n      }\n    }\n\n    /**\n * Renders hot spot, updating its position and visibility.\n * @private\n */\n    function renderHotSpot(hs) {\n      var hsPitchSin = Math.sin(hs.pitch * Math.PI / 180),\n        hsPitchCos = Math.cos(hs.pitch * Math.PI / 180),\n        configPitchSin = Math.sin(config.pitch * Math.PI / 180),\n        configPitchCos = Math.cos(config.pitch * Math.PI / 180),\n        yawCos = Math.cos((-hs.yaw + config.yaw) * Math.PI / 180);\n      var z = hsPitchSin * configPitchSin + hsPitchCos * yawCos * configPitchCos;\n      if ((hs.yaw <= 90 && hs.yaw > -90 && z <= 0) ||\n      ((hs.yaw > 90 || hs.yaw <= -90) && z <= 0)) {\n        hs.div.style.visibility = 'hidden';\n      } else {\n        var yawSin = Math.sin((-hs.yaw + config.yaw) * Math.PI / 180),\n          hfovTan = Math.tan(config.hfov * Math.PI / 360);\n        hs.div.style.visibility = 'visible';\n        // Subpixel rendering doesn't work in Firefox\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=739176\n        var canvas = renderer.getCanvas(),\n          canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var coord = [-canvasWidth / hfovTan * yawSin * hsPitchCos / z / 2,\n          -canvasWidth / hfovTan * (hsPitchSin * configPitchCos -\n            hsPitchCos * yawCos * configPitchSin) / z / 2];\n        // Apply roll\n        var rollSin = Math.sin(config.roll * Math.PI / 180),\n          rollCos = Math.cos(config.roll * Math.PI / 180);\n        coord = [coord[0] * rollCos - coord[1] * rollSin,\n          coord[0] * rollSin + coord[1] * rollCos];\n        // Apply transform\n        coord[0] += (canvasWidth - hs.div.offsetWidth) / 2;\n        coord[1] += (canvasHeight - hs.div.offsetHeight) / 2;\n        var transform = 'translate(' + coord[0] + 'px, ' + coord[1] +\n            'px) translateZ(9999px) rotate(' + config.roll + 'deg)';\n        hs.div.style.webkitTransform = transform;\n        hs.div.style.MozTransform = transform;\n        hs.div.style.transform = transform;\n      }\n    }\n\n    /**\n * Renders hot spots, updating their positions and visibility.\n * @private\n */\n    function renderHotSpots() {\n      config.hotSpots.forEach(renderHotSpot);\n    }\n\n    /**\n * Merges a scene configuration into the current configuration.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n */\n    function mergeConfig(sceneId) {\n      config = {};\n      var k, s;\n      var photoSphereExcludes = ['haov', 'vaov', 'vOffset', 'northOffset', 'horizonPitch', 'horizonRoll'];\n      specifiedPhotoSphereExcludes = [];\n    \n      // Merge default config\n      for (k in defaultConfig) {\n        if (defaultConfig.hasOwnProperty(k)) {\n          config[k] = defaultConfig[k];\n        }\n      }\n    \n      // Merge default scene config\n      for (k in initialConfig.default) {\n        if (initialConfig.default.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.default.strings) {\n              if (initialConfig.default.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.default.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig.default[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    \n      // Merge current scene config\n      if ((sceneId !== null) && (sceneId !== '') && (initialConfig.scenes) && (initialConfig.scenes[sceneId])) {\n        var scene = initialConfig.scenes[sceneId];\n        for (k in scene) {\n          if (scene.hasOwnProperty(k)) {\n            if (k == 'strings') {\n              for (s in scene.strings) {\n                if (scene.strings.hasOwnProperty(s)) {\n                  config.strings[s] = escapeHTML(scene.strings[s]);\n                }\n              }\n            } else {\n              config[k] = scene[k];\n              if (photoSphereExcludes.indexOf(k) >= 0) {\n                specifiedPhotoSphereExcludes.push(k);\n              }\n            }\n          }\n        }\n        config.scene = sceneId;\n      }\n    \n      // Merge initial config\n      for (k in initialConfig) {\n        if (initialConfig.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.strings) {\n              if (initialConfig.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n * Processes configuration options.\n * @param {boolean} [isPreview] - Whether or not the preview is being displayed\n * @private\n */\n    function processOptions(isPreview) {\n      isPreview = isPreview ? isPreview : false;\n\n      // Process preview first so it always loads before the browser hits its\n      // maximum number of connections to a server as can happen with cubic\n      // panoramas\n      if (isPreview && 'preview' in config) {\n        var p = config.preview;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        preview = document.createElement('div');\n        preview.className = 'pnlm-preview-img';\n        preview.style.backgroundImage = \"url('\" + sanitizeURLForCss(p) + \"')\";\n        renderContainer.appendChild(preview);\n      }\n\n      // Handle different preview values\n      var title = config.title,\n        author = config.author;\n      if (isPreview) {\n        if ('previewTitle' in config)\n          {config.title = config.previewTitle;}\n        if ('previewAuthor' in config)\n          {config.author = config.previewAuthor;}\n      }\n\n      // Reset title / author display\n      if (!config.hasOwnProperty('title'))\n        {infoDisplay.title.innerHTML = '';}\n      if (!config.hasOwnProperty('author'))\n        {infoDisplay.author.innerHTML = '';}\n      if (!config.hasOwnProperty('title') && !config.hasOwnProperty('author'))\n        {infoDisplay.container.style.display = 'none';}\n\n      // Fill in load button label and loading box text\n      controls.load.innerHTML = '<p>' + config.strings.loadButtonLabel + '</p>';\n      infoDisplay.load.boxp.innerHTML = config.strings.loadingLabel;\n\n      // Process other options\n      for (var key in config) {\n        if (config.hasOwnProperty(key)) {\n          switch (key) {\n            case 'title':\n              infoDisplay.title.innerHTML = escapeHTML(config[key]);\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'author':\n              infoDisplay.author.innerHTML = config.strings.bylineLabel.replace('%s', escapeHTML(config[key]));\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'fallback':\n              var link = document.createElement('a');\n              link.href = sanitizeURL(config[key]);\n              link.target = '_blank';\n              link.textContent = 'Click here to view this panorama in an alternative viewer.';\n              var message = document.createElement('p');\n              message.textContent = 'Your browser does not support WebGL.';\n              message.appendChild(document.createElement('br'));\n              message.appendChild(link);\n              infoDisplay.errorMsg.innerHTML = ''; // Removes all children nodes\n              infoDisplay.errorMsg.appendChild(message);\n              break;\n            \n            case 'hfov':\n              setHfov(Number(config[key]));\n              break;\n            \n            case 'autoLoad':\n              if (config[key] === true && renderer === undefined) {\n                // Show loading box\n                infoDisplay.load.box.style.display = 'inline';\n                // Hide load button\n                controls.load.style.display = 'none';\n                // Initialize\n                init();\n              }\n              break;\n            \n            case 'showZoomCtrl':\n              if (config[key] && config.showControls != false) {\n                // Show zoom controls\n                controls.zoom.style.display = 'block';\n              } else {\n                // Hide zoom controls\n                controls.zoom.style.display = 'none';\n              }\n              break;\n\n            case 'showFullscreenCtrl':\n              if (config[key] && config.showControls != false && ('fullscreen' in document || 'mozFullScreen' in document ||\n                    'webkitIsFullScreen' in document || 'msFullscreenElement' in document)) {\n                    \n                // Show fullscreen control\n                controls.fullscreen.style.display = 'block';\n              } else {\n                // Hide fullscreen control\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'hotSpotDebug':\n              if (config[key])\n                {hotSpotDebugIndicator.style.display = 'block';}\n              else\n                {hotSpotDebugIndicator.style.display = 'none';}\n              break;\n\n            case 'showControls':\n              if (!config[key]) {\n                controls.orientation.style.display = 'none';\n                controls.zoom.style.display = 'none';\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'orientationOnByDefault':\n              if (config[key]) {\n                if (orientationSupport === undefined)\n                  {startOrientationIfSupported = true;}\n                else if (orientationSupport === true)\n                  {startOrientation();}\n              }\n              break;\n          }\n        }\n      }\n\n      if (isPreview) {\n        // Restore original values if changed for preview\n        if (title)\n          {config.title = title;}\n        else\n          {delete config.title;}\n        if (author)\n          {config.author = author;}\n        else\n          {delete config.author;}\n      }\n    }\n\n    /**\n * Toggles fullscreen mode.\n * @private\n */\n    function toggleFullscreen() {\n      if (loaded && !error) {\n        if (!fullscreenActive) {\n          try {\n            if (container.requestFullscreen) {\n              container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n              container.mozRequestFullScreen();\n            } else if (container.msRequestFullscreen) {\n              container.msRequestFullscreen();\n            } else {\n              container.webkitRequestFullScreen();\n            }\n          } catch (event) {\n            // Fullscreen doesn't work\n          }\n        } else {\n          if (document.exitFullscreen) {\n            document.exitFullscreen();\n          } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n          } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for fullscreen changes.\n * @private\n */\n    function onFullScreenChange() {\n      let isFullScreen = (window.innerWidth == screen.width && window.innerHeight == screen.height);\n      if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement || isFullScreen) {\n        controls.fullscreen.classList.add('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = true;\n      } else {\n        controls.fullscreen.classList.remove('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = false;\n      }\n\n      // Resize renderer (deal with browser quirks and fixes #155)\n      renderer.resize();\n      setHfov(config.hfov);\n      animateInit();\n    }\n\n    /**\n * Increases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomIn() {\n      if (loaded) {\n        setHfov(config.hfov - 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Decreases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomOut() {\n      if (loaded) {\n        setHfov(config.hfov + 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Clamps horzontal field of view to viewer's limits.\n * @private\n * @param {number} hfov - Input horizontal field of view (in degrees)\n * @return {number} - Clamped horizontal field of view (in degrees)\n */\n    function constrainHfov(hfov) {\n    // Keep field of view within bounds\n      var minHfov = config.minHfov;\n      if (config.type == 'multires' && renderer) {\n        minHfov = Math.min(minHfov, renderer.getCanvas().width / (config.multiRes.cubeResolution / 90 * 0.9));\n      }\n      if (minHfov > config.maxHfov) {\n        // Don't change view if bounds don't make sense\n        console.log('HFOV bounds do not make sense (minHfov > maxHfov).');\n        return config.hfov;\n      }\n      var newHfov = config.hfov;\n      if (hfov < minHfov) {\n        newHfov = minHfov;\n      } else if (hfov > config.maxHfov) {\n        newHfov = config.maxHfov;\n      } else {\n        newHfov = hfov;\n      }\n      // Optionally avoid showing background (empty space) on top or bottom by adapting newHfov\n      if (config.avoidShowingBackground && renderer) {\n        var canvas = renderer.getCanvas();\n        newHfov = Math.min(newHfov,\n          Math.atan(Math.tan((config.maxPitch - config.minPitch) / 360 * Math.PI) /\n                                     canvas.height * canvas.width)\n                               * 360 / Math.PI);\n      }\n      return newHfov;\n    }\n\n    /**\n * Sets viewer's horizontal field of view.\n * @private\n * @param {number} hfov - Desired horizontal field of view in degrees.\n */\n    function setHfov(hfov) {\n      config.hfov = constrainHfov(hfov);\n    }\n\n    /**\n * Stops auto rotation and animated moves.\n * @private\n */\n    function stopAnimation() {\n      animatedMove = {};\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n    }\n\n    /**\n * Loads panorama.\n * @private\n */\n    function load() {\n    // Since WebGL error handling is very general, first we clear any error box\n    // since it is a new scene and the error from previous maybe because of lacking\n    // memory etc and not because of a lack of WebGL support etc\n      clearError();\n      loaded = false;\n\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'inline';\n      init();\n    }\n\n    /**\n * Loads scene.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n * @param {number} targetPitch - Pitch viewer should be centered on once scene loads.\n * @param {number} targetYaw - Yaw viewer should be centered on once scene loads.\n * @param {number} targetHfov - HFOV viewer should use once scene loads.\n * @param {boolean} [fadeDone] - If `true`, fade setup is skipped.\n */\n    function loadScene(sceneId, targetPitch, targetYaw, targetHfov, fadeDone) {\n      loaded = false;\n      animatedMove = {};\n    \n      // Set up fade if specified\n      var fadeImg, workingPitch, workingYaw, workingHfov;\n      if (config.sceneFadeDuration && !fadeDone) {\n        var data = renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { returnImage: true });\n        if (data !== undefined) {\n          fadeImg = new Image();\n          fadeImg.className = 'pnlm-fade-img';\n          fadeImg.style.transition = 'opacity ' + (config.sceneFadeDuration / 1000) + 's';\n          fadeImg.style.width = '100%';\n          fadeImg.style.height = '100%';\n          fadeImg.onload = function() {\n            loadScene(sceneId, targetPitch, targetYaw, targetHfov, true);\n          };\n          fadeImg.src = data;\n          renderContainer.appendChild(fadeImg);\n          renderer.fadeImg = fadeImg;\n          return;\n        }\n      }\n    \n      // Set new pointing\n      if (targetPitch === 'same') {\n        workingPitch = config.pitch;\n      } else {\n        workingPitch = targetPitch;\n      }\n      if (targetYaw === 'same') {\n        workingYaw = config.yaw;\n      } else if (targetYaw === 'sameAzimuth') {\n        workingYaw = config.yaw + (config.northOffset || 0) - (initialConfig.scenes[sceneId].northOffset || 0);\n      } else {\n        workingYaw = targetYaw;\n      }\n      if (targetHfov === 'same') {\n        workingHfov = config.hfov;\n      } else {\n        workingHfov = targetHfov;\n      }\n    \n      // Destroy hot spots from previous scene\n      destroyHotSpots();\n    \n      // Create the new config for the scene\n      mergeConfig(sceneId);\n\n      // Stop motion\n      speed.yaw = speed.pitch = speed.hfov = 0;\n\n      // Reload scene\n      processOptions();\n      if (workingPitch !== undefined) {\n        config.pitch = workingPitch;\n      }\n      if (workingYaw !== undefined) {\n        config.yaw = workingYaw;\n      }\n      if (workingHfov !== undefined) {\n        config.hfov = workingHfov;\n      }\n      fireEvent('scenechange', sceneId);\n      load();\n    }\n\n    /**\n * Stop using device orientation.\n * @private\n */\n    function stopOrientation() {\n      window.removeEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.remove('pnlm-orientation-button-active');\n      orientation = false;\n    }\n\n    /**\n * Start using device orientation.\n * @private\n */\n    function startOrientation() {\n      orientation = 1;\n      window.addEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.add('pnlm-orientation-button-active');\n    }\n\n    /**\n * Escapes HTML string (to mitigate possible DOM XSS attacks).\n * @private\n * @param {string} s - String to escape\n * @returns {string} Escaped string\n */\n    function escapeHTML(s) {\n      if (!initialConfig.escapeHTML)\n        {return String(s).split('\\n').join('<br>');}\n      return String(s).split(/&/g).join('&amp;')\n        .split('\"').join('&quot;')\n        .split(\"'\").join('&#39;')\n        .split('<').join('&lt;')\n        .split('>').join('&gt;')\n        .split('/').join('&#x2f;')\n        .split('\\n').join('<br>');  // Allow line breaks\n    }\n\n    /**\n * Removes possibility of XSS attacks with URLs.\n * The URL cannot be of protocol 'javascript'.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURL(url) {\n      if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n        return 'about:blank';\n      }\n      return url;\n    }\n\n    /**\n * Removes possibility of XSS atacks with URLs for CSS.\n * The URL will be sanitized with `sanitizeURL()` and single quotes\n * and double quotes escaped.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURLForCss(url) {\n      return sanitizeURL(url)\n        .replace(/\"/g, '%22')\n        .replace(/'/g, '%27');\n    }\n\n    /**\n * Checks whether or not a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} `true` if a panorama is loaded, else `false`\n */\n    this.isLoaded = function() {\n      return Boolean(loaded);\n    };\n\n    /**\n * Returns the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Pitch in degrees\n */\n    this.getPitch = function() {\n      return config.pitch;\n    };\n\n    /**\n * Sets the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Pitch in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setPitch = function(pitch, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.pitch = {\n          'startTime': Date.now(),\n          'startPosition': config.pitch,\n          'endPosition': pitch,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.pitch = pitch;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum pitch, maximum pitch]\n */\n    this.getPitchBounds = function() {\n      return [config.minPitch, config.maxPitch];\n    };\n\n    /**\n * Set the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum pitch, maximum pitch]\n * @returns {Viewer} `this`\n */\n    this.setPitchBounds = function(bounds) {\n      config.minPitch = Math.max(-90, Math.min(bounds[0], 90));\n      config.maxPitch = Math.max(-90, Math.min(bounds[1], 90));\n      return this;\n    };\n\n    /**\n * Returns the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Yaw in degrees\n */\n    this.getYaw = function() {\n      return config.yaw;\n    };\n\n    /**\n * Sets the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} yaw - Yaw in degrees [-180, 180]\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setYaw = function(yaw, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      yaw = ((yaw + 180) % 360) - 180; // Keep in bounds\n      if (animated) {\n        // Animate in shortest direction\n        if (config.yaw - yaw > 180)\n          {yaw += 360}\n        else if (yaw - config.yaw > 180)\n          {yaw -= 360}\n\n        animatedMove.yaw = {\n          'startTime': Date.now(),\n          'startPosition': config.yaw,\n          'endPosition': yaw,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.yaw = yaw;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [yaw pitch, maximum yaw]\n */\n    this.getYawBounds = function() {\n      return [config.minYaw, config.maxYaw];\n    };\n\n    /**\n * Set the minimum and maximum allowed yaws (in degrees [-180, 180]).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum yaw, maximum yaw]\n * @returns {Viewer} `this`\n */\n    this.setYawBounds = function(bounds) {\n      config.minYaw = Math.max(-180, Math.min(bounds[0], 180));\n      config.maxYaw = Math.max(-180, Math.min(bounds[1], 180));\n      return this;\n    };\n\n    /**\n * Returns the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizontal field of view in degrees\n */\n    this.getHfov = function() {\n      return config.hfov;\n    };\n\n    /**\n * Sets the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @param {number} hfov - Horizontal field of view in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setHfov = function(hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.hfov = {\n          'startTime': Date.now(),\n          'startPosition': config.hfov,\n          'endPosition': constrainHfov(hfov),\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        setHfov(hfov);\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed horizontal fields of view\n * (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum hfov, maximum hfov]\n */\n    this.getHfovBounds = function() {\n      return [config.minHfov, config.maxHfov];\n    };\n\n    /**\n * Set the minimum and maximum allowed horizontal fields of view (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum hfov, maximum hfov]\n * @returns {Viewer} `this`\n */\n    this.setHfovBounds = function(bounds) {\n      config.minHfov = Math.max(0, bounds[0]);\n      config.maxHfov = Math.max(0, bounds[1]);\n      return this;\n    };\n\n    /**\n * Set a new view. Any parameters not specified remain the same.\n * @memberof Viewer\n * @instance\n * @param {number} [pitch] - Target pitch\n * @param {number} [yaw] - Target yaw\n * @param {number} [hfov] - Target hfov\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.lookAt = function(pitch, yaw, hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (pitch !== undefined) {\n        this.setPitch(pitch, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (yaw !== undefined) {\n        this.setYaw(yaw, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (hfov !== undefined)\n        {this.setHfov(hfov, animated, callback, callbackArgs);}\n      return this;\n    };\n\n    /**\n * Returns the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @returns {number} North offset in degrees\n */\n    this.getNorthOffset = function() {\n      return config.northOffset;\n    };\n\n    /**\n * Sets the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @param {number} heading - North offset in degrees\n * @returns {Viewer} `this`\n */\n    this.setNorthOffset = function(heading) {\n      config.northOffset = Math.min(360, Math.max(0, heading));\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon roll in degrees\n */\n    this.getHorizonRoll = function() {\n      return config.horizonRoll;\n    };\n\n    /**\n * Sets the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @param {number} roll - Horizon roll in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonRoll = function(roll) {\n      config.horizonRoll = Math.min(90, Math.max(-90, roll));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon pitch in degrees\n */\n    this.getHorizonPitch = function() {\n      return config.horizonPitch;\n    };\n\n    /**\n * Sets the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Horizon pitch in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonPitch = function(pitch) {\n      config.horizonPitch = Math.min(90, Math.max(-90, pitch));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Start auto rotation.\n * @memberof Viewer\n * @instance\n * @param {number} [speed] - Auto rotation speed / direction. If not specified, previous value is used.\n * @returns {Viewer} `this`\n */\n    this.startAutoRotate = function(speed) {\n      speed = speed || autoRotateSpeed || 1;\n      config.autoRotate = speed;\n      _this.lookAt(origPitch, undefined, origHfov, 3000);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Stop auto rotation.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.stopAutoRotate = function() {\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n      config.autoRotateInactivityDelay = -1;\n      return this;\n    };\n\n    /**\n * Returns the panorama renderer.\n * @memberof Viewer\n * @instance\n * @returns {Renderer}\n */\n    this.getRenderer = function() {\n      return renderer;\n    };\n\n    /**\n * Sets update flag for dynamic content.\n * @memberof Viewer\n * @instance\n * @param {boolean} bool - Whether or not viewer should update even when still\n * @returns {Viewer} `this`\n */\n    this.setUpdate = function(bool) {\n      update = bool === true;\n      if (renderer === undefined)\n        {onImageLoad();}\n      else\n        {animateInit();}\n      return this;\n    };\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @memberof Viewer\n * @instance\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    this.mouseEventToCoords = function(event) {\n      return mouseEventToCoords(event);\n    };\n\n    /**\n * Change scene being viewed.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - Identifier of scene to switch to.\n * @param {number} [pitch] - Pitch to use with new scene\n * @param {number} [yaw] - Yaw to use with new scene\n * @param {number} [hfov] - HFOV to use with new scene\n * @returns {Viewer} `this`\n */\n    this.loadScene = function(sceneId, pitch, yaw, hfov) {\n      if (loaded !== false)\n        {loadScene(sceneId, pitch, yaw, hfov);}\n      return this;\n    };\n\n    /**\n * Get ID of current scene.\n * @memberof Viewer\n * @instance\n * @returns {string} ID of current scene\n */\n    this.getScene = function() {\n      return config.scene;\n    };\n\n    /**\n * Add a new scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the new scene\n * @param {string} config - The configuration of the new scene\n * @returns {Viewer} `this`\n */\n    this.addScene = function(sceneId, config) {\n      initialConfig.scenes[sceneId] = config;\n      return this;\n    };\n\n    /**\n * Remove a scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the scene\n * @returns {boolean} False if the scene is the current scene or if the scene doesn't exists, else true\n */\n    this.removeScene = function(sceneId) {\n      if (config.scene === sceneId || !initialConfig.scenes.hasOwnProperty(sceneId))\n        {return false;}\n      delete initialConfig.scenes[sceneId];\n      return true;\n    };\n\n    /**\n * Toggle fullscreen.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.toggleFullscreen = function() {\n      toggleFullscreen();\n      return this;\n    };\n\n    /**\n * Get configuration of current scene.\n * @memberof Viewer\n * @instance\n * @returns {Object} Configuration of current scene\n */\n    this.getConfig = function() {\n      return config;\n    };\n\n    /**\n * Get viewer's container element.\n * @memberof Viewer\n * @instance\n * @returns {HTMLElement} Container `div` element\n */\n    this.getContainer = function() {\n      return container;\n    };\n\n    /**\n * Add a new hot spot.\n * @memberof Viewer\n * @instance\n * @param {Object} hs - The configuration for the hot spot\n * @param {string} [sceneId] - Adds hot spot to specified scene if provided, else to current scene\n * @returns {Viewer} `this`\n * @throws Throws an error if the scene ID is provided but invalid\n */\n    this.addHotSpot = function(hs, sceneId) {\n      if (sceneId === undefined && config.scene === undefined) {\n        // Not a tour\n        config.hotSpots.push(hs);\n      } else {\n        // Tour\n        var id = sceneId !== undefined ? sceneId : config.scene;\n        if (initialConfig.scenes.hasOwnProperty(id)) {\n          if (!initialConfig.scenes[id].hasOwnProperty('hotSpots')) {\n            initialConfig.scenes[id].hotSpots = []; // Create hot spots array if needed\n            if (id == config.scene)\n              {config.hotSpots = initialConfig.scenes[id].hotSpots;}    // Link to current config\n          }\n          initialConfig.scenes[id].hotSpots.push(hs); // Add hot spot to config\n        } else {\n          throw 'Invalid scene ID!';\n        }\n      }\n      if (sceneId === undefined || config.scene == sceneId) {\n        // Add to current scene\n        createHotSpot(hs);\n        if (loaded)\n          {renderHotSpot(hs);}\n      }\n      return this;\n    };\n\n    /**\n * Remove a hot spot.\n * @memberof Viewer\n * @instance\n * @param {string} hotSpotId - The ID of the hot spot\n * @param {string} [sceneId] - Removes hot spot from specified scene if provided, else from current scene\n * @returns {boolean} True if deletion is successful, else false\n */\n    this.removeHotSpot = function(hotSpotId, sceneId) {\n      if (sceneId === undefined || config.scene == sceneId) {\n        if (!config.hotSpots)\n          {return false;}\n        for (var i = 0; i < config.hotSpots.length; i++) {\n          if (config.hotSpots[i].hasOwnProperty('id') &&\n                config.hotSpots[i].id === hotSpotId) {\n            // Delete hot spot DOM elements\n            var current = config.hotSpots[i].div;\n            while (current.parentNode != renderContainer)\n              {current = current.parentNode;}\n            renderContainer.removeChild(current);\n            delete config.hotSpots[i].div;\n            // Remove hot spot from configuration\n            config.hotSpots.splice(i, 1);\n            return true;\n          }\n        }\n      } else {\n        if (initialConfig.scenes.hasOwnProperty(sceneId)) {\n          if (!initialConfig.scenes[sceneId].hasOwnProperty('hotSpots'))\n            {return false;}\n          for (var i = 0; i < initialConfig.scenes[sceneId].hotSpots.length; i++) {\n            if (initialConfig.scenes[sceneId].hotSpots[i].hasOwnProperty('id') &&\n                    initialConfig.scenes[sceneId].hotSpots[i].id === hotSpotId) {\n              // Remove hot spot from configuration\n              initialConfig.scenes[sceneId].hotSpots.splice(i, 1);\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n    };\n\n    /**\n * This method should be called if the viewer's container is resized.\n * @memberof Viewer\n * @instance\n */\n    this.resize = function() {\n      if (renderer)\n        {onDocumentResize();}\n    };\n\n    /**\n * Check if a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if a panorama is loaded, else false\n */\n    this.isLoaded = function() {\n      return loaded;\n    };\n\n    /**\n * Check if device orientation control is supported.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if supported, else false\n */\n    this.isOrientationSupported = function() {\n      return orientationSupport || false;\n    };\n\n    /**\n * Stop using device orientation.\n * @memberof Viewer\n * @instance\n */\n    this.stopOrientation = function() {\n      stopOrientation();\n    };\n\n    /**\n * Start using device orientation (does nothing if not supported).\n * @memberof Viewer\n * @instance\n */\n    this.startOrientation = function() {\n      if (orientationSupport)\n        {startOrientation();}\n    };\n\n    /**\n * Check if device orientation control is currently activated.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if active, else false\n */\n    this.isOrientationActive = function() {\n      return Boolean(orientation);\n    };\n\n    /**\n * Subscribe listener to specified event.\n * @memberof Viewer\n * @instance\n * @param {string} type - Type of event to subscribe to.\n * @param {Function} listener - Listener function to subscribe to event.\n * @returns {Viewer} `this`\n */\n    this.on = function(type, listener) {\n      externalEventListeners[type] = externalEventListeners[type] || [];\n      externalEventListeners[type].push(listener);\n      return this;\n    };\n\n    /**\n * Remove an event listener (or listeners).\n * @memberof Viewer\n * @param {string} [type] - Type of event to remove listeners from. If not specified, all listeners are removed.\n * @param {Function} [listener] - Listener function to remove. If not specified, all listeners of specified type are removed.\n * @returns {Viewer} `this`\n */\n    this.off = function(type, listener) {\n      if (!type) {\n        // Remove all listeners if type isn't specified\n        externalEventListeners = {};\n        return this;\n      }\n      if (listener) {\n        var i = externalEventListeners[type].indexOf(listener);\n        if (i >= 0) {\n          // Remove listener if found\n          externalEventListeners[type].splice(i, 1);\n        }\n        if (externalEventListeners[type].length == 0) {\n          // Remove category if empty\n          delete externalEventListeners[type];\n        }\n      } else {\n        // Remove category of listeners if listener isn't specified\n        delete externalEventListeners[type];\n      }\n      return this;\n    };\n\n    /**\n * Fire listeners attached to specified event.\n * @private\n * @param {string} [type] - Type of event to fire listeners for.\n */\n    function fireEvent(type) {\n      if (type in externalEventListeners) {\n        // Reverse iteration is useful, if event listener is removed inside its definition\n        for (var i = externalEventListeners[type].length; i > 0; i--) {\n          externalEventListeners[type][externalEventListeners[type].length - i].apply(null, [].slice.call(arguments, 1));\n        }\n      }\n    }\n\n    /**\n * Destructor.\n * @instance\n * @memberof Viewer\n */\n    this.destroy = function() {\n      if (renderer)\n        {renderer.destroy()};\n      if (listenersAdded) {\n        dragFix.removeEventListener('mousedown', onDocumentMouseDown, false);\n        dragFix.removeEventListener('dblclick', onDocumentDoubleClick, false);\n        document.removeEventListener('mousemove', onDocumentMouseMove, false);\n        document.removeEventListener('mouseup', onDocumentMouseUp, false);\n        container.removeEventListener('mousewheel', onDocumentMouseWheel, false);\n        container.removeEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        container.removeEventListener('mozfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('msfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('fullscreenchange', onFullScreenChange, false);\n        window.removeEventListener('resize', onDocumentResize, false);\n        window.removeEventListener('orientationchange', onDocumentResize, false);\n        container.removeEventListener('keydown', onDocumentKeyPress, false);\n        container.removeEventListener('keyup', onDocumentKeyUp, false);\n        container.removeEventListener('blur', clearKeys, false);\n        document.removeEventListener('mouseleave', onDocumentMouseUp, false);\n        dragFix.removeEventListener('touchstart', onDocumentTouchStart, false);\n        dragFix.removeEventListener('touchmove', onDocumentTouchMove, false);\n        dragFix.removeEventListener('touchend', onDocumentTouchEnd, false);\n        dragFix.removeEventListener('pointerdown', onDocumentPointerDown, false);\n        dragFix.removeEventListener('pointermove', onDocumentPointerMove, false);\n        dragFix.removeEventListener('pointerup', onDocumentPointerUp, false);\n        dragFix.removeEventListener('pointerleave', onDocumentPointerUp, false);\n      }\n      container.innerHTML = '';\n      container.classList.remove('pnlm-container');\n      uiContainer.classList.remove('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n    };\n\n  }\n\n  return {\n    viewer: function(container, config) {\n      return new Viewer(container, config);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/pannellum.js","/**\n * Provides requestAnimationFrame in a cross browser way.\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n */\n\nif ( !window.requestAnimationFrame ) {\n\n    window.requestAnimationFrame = ( function() {\n\n        return window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {\n\n            window.setTimeout( callback, 1000 / 60 );\n\n        };\n\n    } )();\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/RequestAnimationFrame.js","/**\n * @license\n * Video.js 7.2.2 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.2.2\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\nvar EVENT_MAP = void 0;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.queueTrigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n\n\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    }).catch(function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // if we are a blob url, don't update the source cache\n    // blob urls can arise when playback is done via Media Source Extension (MSE)\n    // such as m3u8 sources with @videojs/http-streaming (VHS)\n    if (/^blob:/.test(src)) {\n      return;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  Player.prototype.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.2.4\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck$1 = function classCallCheck$$1(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$2 = function get$$1(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get$$1(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits$1 = function inherits$$1(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function possibleConstructorReturn$$1(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray$1 = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits$1(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck$1(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n    return _this;\n  }\n\n  createClass$1(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new Parser();\n\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n\n    var toUnsigned$1 = bin.toUnsigned;\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n    // Find the data for a box specified by its path\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n\n        type = parseType(data.subarray(i + 4, i + 8));\n\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n        i = end;\n      }\n\n      // we've finished searching all of data\n      return results;\n    };\n\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']);\n\n      // mdhd timescale\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n\n        tkhd = _findBox(trak, ['tkhd'])[0];\n        if (!tkhd) {\n          return null;\n        }\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n        if (!mdhd) {\n          return null;\n        }\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result;\n\n      // we need info from two childrend of each track fragment box\n      trafs = _findBox(fragment, ['moof', 'traf']);\n\n      // determine the start times for each track\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime;\n\n          // get the track id from the tfhd\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]);\n          // assume a 90kHz clock if no timescale was specified\n          scale = timescale[id] || 90e3;\n\n          // get the base media decode time from the tfdt\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity;\n\n          // convert base time to seconds\n          return baseTime / scale;\n        });\n      }));\n\n      // return the minimum\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i];\n\n        // Split on 'aud'-type nal units\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      }\n\n      // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      }\n\n      // Push the final frame\n      frames.push(currentFrame);\n      return frames;\n    };\n\n    // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = [];\n\n      // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts;\n\n      // store some metadata about all the Gops\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration;\n\n      // push the final Gop\n      gops.push(currentGop);\n      return gops;\n    };\n\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount;\n\n        // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    };\n\n    // generate the track's sample table from an array of gops\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          sample = sampleForFrame(currentFrame, dataOffset);\n\n          dataOffset += sample.size;\n\n          samples.push(sample);\n        }\n      }\n      return samples;\n    };\n\n    // generate the track's raw mdat data from an array of gops\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer);\n\n      // For each Gop..\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        // For each Frame..\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          // For each NAL..\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n\n    var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData;\n\n      // Find all `Emulation Prevention Bytes`\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      }\n\n      // If no Emulation Prevention Bytes were found just return the original\n      // array\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      }\n\n      // Create a new array to hold the NAL unit data\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++;\n          // Remove this position index\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n\n    // exports\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    };\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = captionPacketParser.parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = captionPacketParser.parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts;\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          // Configure the caption window if we're in roll-up mode\n          if (this.mode_ === 'rollUp') {\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp';\n        // Spec says to wipe memories when switching to roll-up\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        // This triggers data on the H264Stream\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS$1 = 90000,\n\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS$1;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$1;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var isLikelyAacData, arrayEquals, sumFrameByteLengths;\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        trackDecodeInfo.clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$2 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$2 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          trackDecodeInfo.clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = frameUtils.generateSampleTable(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$1 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n      return result;\n    },\n\n\n    // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i;\n\n        // iterate past any SPSs\n        offset = 6;\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        // iterate past any PPSs\n        numOfPictureParameterSets = data[offset];\n        offset++;\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$1(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$1(data.subarray(i, i + 4)));\n          i += 4;\n        }\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$1(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8;\n\n        // parse out the name field\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n          result.name += String.fromCharCode(data[i]);\n        }\n        // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n        result.name = decodeURIComponent(escape(result.name));\n\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        };\n\n        // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n\n        // convert fixed-point, base 16 back to a number\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n\n        i = 8;\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2;\n        // convert fixed-point, base 16 back to a number\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n\n\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n\n\n        // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n\n\n        // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n\n\n        // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n\n\n        // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n\n\n        // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n\n\n        // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        }\n\n        // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n        }\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box;\n\n      // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$1(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        // parse type-specific data\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n        box.size = size;\n        box.type = type;\n\n        // store this box and move to the next\n        result.push(box);\n        i = end;\n      }\n      return result;\n    };\n\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' ');\n\n      // iterate over all the boxes\n      return inspectedMp4.map(function (box, index) {\n\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' +\n\n        // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes';\n\n          // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key];\n\n          // print out raw bytes as hexademical\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n            if (!bytes) {\n              return prefix + '<>';\n            }\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          }\n\n          // stringify generic objects\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + (\n\n        // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun\n    };\n\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // Bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n          sample.pts = currentDts + sample.compositionTimeOffset;\n\n          currentDts += sample.duration;\n        });\n\n        allSamples = allSamples.concat(samples);\n      });\n\n      return allSamples;\n    };\n\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']);\n      // To get SEI NAL units\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = [];\n\n      // Pair up each traf with a mdat as moofs and mdats are in pairs\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']);\n        // Exactly 1 tfhd per traf\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']);\n        // Either 0 or 1 tfdt per traf\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals;\n\n        // Only parse video data for the chosen video track\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n\n      return captionNals;\n    };\n\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1;\n\n      // Stores segments seen before trackId and timescale are set\n      var segmentCache;\n      // Stores video track ID of the track being parsed\n      var trackId;\n      // Stores the timescale of the track being parsed\n      var timescale;\n      // Stores captions parsed so far\n      var parsedCaptions;\n\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true;\n\n        // Collect dispatched captions\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && (typeof timescales === 'undefined' ? 'undefined' : _typeof(timescales)) === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null;\n\n          // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId];\n\n          // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        }\n\n        // Now that a timescale and trackId is set, parse cached segments\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals);\n        // Force the parsed captions to be dispatched\n        this.flushStream();\n\n        return parsedCaptions;\n      };\n\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n\n      /**\n        * Reset caption buckets for new data\n       **/\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n\n      /**\n        * Reset caption parser\n       **/\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  // neither buffer has been created yet\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  }\n\n  // only one buffer is configured\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are configured\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are empty\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  }\n\n  // Handle the case where we have both buffers and create an\n  // intersection of the two\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length;\n\n  // A) Gather up all start and end times\n  while (count--) {\n    extents.push({ time: videoBuffered.start(count), type: 'start' });\n    extents.push({ time: videoBuffered.end(count), type: 'end' });\n  }\n  count = audioBuffered.length;\n  while (count--) {\n    extents.push({ time: audioBuffered.start(count), type: 'start' });\n    extents.push({ time: audioBuffered.end(count), type: 'end' });\n  }\n  // B) Sort them by time\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  });\n\n  // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++;\n\n      // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--;\n\n      // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    }\n\n    // F) Record overlapping ranges\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck$1(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this.transmuxer_ = new TransmuxWorker();\n    _this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  createClass$1(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      removeCuesFromTrack(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck$1(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n\n    _this.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this.sourceBuffers = [];\n\n    _this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  createClass$1(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits$1(DashPlaylistLoader, _EventTarget);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck$1(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn$1(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this.state = 'HAVE_METADATA';\n    _this.started = true;\n    // we only should have one playlist so select it\n    _this.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass$1(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      this.state = 'HAVE_METADATA';\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      // switching from an already loaded playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n\n      this.refreshMedia_();\n\n      // trigger media change if the active media has been updated\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n\n      master.uri = this.srcUrl;\n\n      // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n\n        master.playlists[i].uri = phonyUri;\n        // set up by URI references\n        master.playlists[phonyUri] = master.playlists[i];\n      }\n\n      // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri;\n          // setup URI references\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this2.request = null;\n\n        if (error) {\n          _this2.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this2.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this2.state === 'HAVE_NOTHING') {\n            _this2.started = false;\n          }\n          return _this2.trigger('error');\n        }\n\n        _this2.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this2.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this2.masterLoaded_ = Date.now();\n        }\n\n        _this2.syncClientServerClock_(_this2.onClientServerClockSync_.bind(_this2));\n      });\n    }\n\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this3 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_);\n\n      // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this3.clientOffset_ = _this3.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this3.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this3.clientOffset_ = serverTime - Date.now();\n\n        done();\n      });\n    }\n\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this4 = this;\n\n      this.master = this.parseMasterXml();\n\n      this.state = 'HAVE_MASTER';\n\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n      // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n      window$1.setTimeout(function () {\n        _this4.trigger('loadedmetadata');\n      }, 0);\n\n      // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this4.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this5 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        var newMaster = _this5.parseMasterXml();\n\n        _this5.master = updateMaster$1(_this5.master, newMaster);\n\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, _this5.master.minimumUpdatePeriod);\n      });\n    }\n\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this6 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this6.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck$1(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass$1(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true;\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n      this.runCallback_();\n    }\n\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n\n    // Initialize CaptionParser if it hasn't been yet\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({ type: 'usage', name: 'hls-608' });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits$1(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck$1(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = { rate: 0, count: 0 };\n    _this.roundTrip = NaN;\n    _this.resetStats_();\n    _this.mediaIndex = null;\n\n    // private settings\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT';\n\n    // private instance variables\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {};\n    // Fmp4 CaptionParser\n    _this.captionParser_ = new CaptionParser();\n\n    _this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this.fetchAtBuffer_ = false;\n\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  createClass$1(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done);\n      // clears fmp4 captions\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n      // This has fmp4 captions, add them to text tracks\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        });\n        // Reset stored captions since we added parsed\n        // captions to a text track at this point\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  createClass$1(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n          _this3.state = 'READY';\n          _this3.pause();\n          _this3.trigger('error');\n        });\n\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray$1(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits$1(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck$1(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  createClass$1(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck$1(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n\n    _this.mediaTypes_ = createMediaTypes();\n\n    _this.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n    _this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n    return _this;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  createClass$1(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media);\n\n      // delete all buffered data to allow an immediate quality switch, then seek\n      // in place to give the browser a kick to remove any cached frames from the\n      // previous rendition\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause\n        // segments from the previously enabled rendition to load before the new playlist\n        // has finished loading\n        _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n      });\n\n      // don't need to reset audio as it is reset when media changes\n    }\n\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n            _this5.seekTo_(seekable$$1.end(0));\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n\n          return false;\n        }\n\n        // trigger firstplay to inform the source handler to ignore the next seek event\n        this.trigger('firstplay');\n        // seek to the live point\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this6.mediaSource.duration = newDuration;\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes);\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter =\n      // If there is more than one mime type\n      mimeTypes.length > 1 &&\n      // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 &&\n      // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ?\n      // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() :\n      // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck$1(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck$1(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  createClass$1(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.2.4\";\n\n// since VHS handles HLS and DASH (and in the future, more types), use * to capture all\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    }\n  };\n});\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits$1(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck$1(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this;\n      // deprecated, for backwards compatibility\n      _player.dash = _this;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    });\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n    return _this;\n  }\n\n  createClass$1(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type);\n      // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      get$2(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = 11\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 12\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = 13\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/mp4-generator.js\n// module id = 14\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      return row.trim();\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/caption-stream.js\n// module id = 15\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/caption-packet-parser.js\n// module id = 16\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = 17\n// module chunks = 0","import Pannellum from \"./elements/Pannellum\";\nimport PannellumVideo from \"./elements/PannellumVideo\";\n\nexport {\n  Pannellum,\n  PannellumVideo\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import propTypes from \"prop-types\";\nimport React, { PureComponent } from \"react\";\nimport \"../pannellum/css/pannellum.css\";\nimport \"../pannellum/css/style-textInfo.css\";\n\nimport \"../pannellum/js/libpannellum.js\";\nimport \"../pannellum/js/pannellum.js\";\nimport \"../pannellum/js/RequestAnimationFrame\";\n\nclass Pannellum extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: Math.random()\n        .toString(36)\n        .substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    image: propTypes.string,\n    haov: propTypes.number,\n    vaov: propTypes.number,\n    vOffset: propTypes.number,\n    yaw: propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    autoRotate: propTypes.number,\n    compass: propTypes.bool,\n    preview: propTypes.string,\n    previewTitle: propTypes.string,\n    previewAuthor: propTypes.string,\n    title: propTypes.string,\n    author: propTypes.string,\n    autoLoad: propTypes.bool,\n    orientationOnByDefault: propTypes.bool,\n    showZoomCtrl: propTypes.bool,\n    keyboardZoom: propTypes.bool,\n    mouseZoom: propTypes.bool,\n    draggable: propTypes.bool,\n    disableKeyboardCtrl : propTypes.bool,\n    showFullscreenCtrl: propTypes.bool,\n    showControls: propTypes.bool,\n    onLoad: propTypes.func,\n    onScenechange: propTypes.func,\n    onScenechangefadedone: propTypes.func,\n    onError: propTypes.func,\n    onErrorcleared: propTypes.func,\n    onMousedown: propTypes.func,\n    onMouseup: propTypes.func,\n    onTouchstart: propTypes.func,\n    onTouchend: propTypes.func,\n    hotspotDebug: propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick: propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n    onRender: propTypes.func,\n  };\n\n  static defaultProps = {\n    children: [],\n    width: \"100%\",\n    height: \"400px\",\n    image: \"\",\n    haov: 360,\n    vaov: 180,\n    vOffset: 0,\n    yaw: 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    autoRotate: 0,\n    compass: false,\n    preview: \"\",\n    previewTitle: \"\",\n    previewAuthor: \"\",\n    title: \"\",\n    author: \"\",\n    autoLoad: false,\n    orientationOnByDefault: false,\n    showZoomCtrl: true,\n    keyboardZoom: true,\n    mouseZoom: true,\n    draggable: true,\n    disableKeyboardCtrl: false,\n    showFullscreenCtrl: true,\n    showControls: true,\n    onLoad: () => {},\n    onScenechange: () => {},\n    onScenechangefadedone: () => {},\n    onError: () => {},\n    onErrorcleared: () => {},\n    onMousedown: () => {},\n    onMouseup: () => {},\n    onTouchstart: () => {},\n    onTouchend: () => {},\n    hotspotDebug: false,\n    onRender: null,\n  };\n\n  renderImage = state => {\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one\n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)) {\n      hotspots.map(hotspot => {\n        switch (hotspot.props.type) {\n          case \"info\":\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              type: hotspot.props.type,\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              text: hotspot.props.text ? hotspot.props.text : \"\",\n              URL: hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              cssClass: hotspot.props.cssClass\n                ? hotspot.props.cssClass\n                : \"tooltipcss\",\n              createTooltipFunc: hotspot.props.tooltip\n                ? hotspot.props.tooltip\n                : this.hotspotTooltip,\n              createTooltipArgs: hotspot.props.tooltipArg\n                ? hotspot.props.tooltipArg\n                : {},\n              clickHandlerFunc: hotspot.props.handleClick\n                ? hotspot.props.handleClick\n                : this.handleClickHotspot,\n              clickHandlerArgs: hotspot.props.handleClickArg\n                ? hotspot.props.handleClickArg\n                : { name: \"test\" }\n            });\n          default:\n            return [];\n        }\n      });\n    }\n\n    let jsonConfig = {\n      type: \"equirectangular\",\n      panorama: this.props.image,\n      haov: this.props.haov,\n      vaov: this.props.vaov,\n      vOffset: this.props.vOffset,\n      yaw: this.props.yaw,\n      pitch: this.props.pitch,\n      hfov: this.props.hfov,\n      minHfov: this.props.minHfov,\n      maxHfov: this.props.maxHfov,\n      minPitch: this.props.minPitch,\n      maxPitch: this.props.maxPitch,\n      minYaw: this.props.minYaw,\n      maxYaw: this.props.maxYaw,\n      autoRotate: this.props.autoRotate,\n      compass: this.props.compass,\n      preview: this.props.preview,\n      previewTitle: this.props.previewTitle,\n      previewAuthor: this.props.previewAuthor,\n      author: this.props.author,\n      title: this.props.title,\n      autoLoad: this.props.autoLoad,\n      orientationOnByDefault: this.props.orientationOnByDefault,\n      showZoomCtrl: this.props.showZoomCtrl,\n      keyboardZoom: this.props.keyboardZoom,\n      mouseZoom: this.props.mouseZoom,\n      draggable: this.props.draggable,\n      disableKeyboardCtrl: this.props.disableKeyboardCtrl,\n      showFullscreenCtrl: this.props.showFullscreenCtrl,\n      showControls: this.props.showControls,\n      hotSpotDebug: this.props.hotspotDebug,\n      hotSpots: hotspotArray,\n      onRender: this.props.onRender,\n    };\n\n    Object.keys(jsonConfig).forEach(\n      key => jsonConfig[key] === \"\" && delete jsonConfig[key]\n    );\n    // this.setState({ jsonConfig });\n\n    if (state === \"update\") {\n      this.panorama.destroy();\n    } \n    this.panorama = pannellum.viewer(\n      this.props.id ? this.props.id : this.state.id,\n      jsonConfig\n    );\n\n    this.panorama.on(\"load\", this.props.onLoad);\n    this.panorama.on(\"scenechange\", this.props.onScenechange);\n    this.panorama.on(\"scenechangefadedone\", this.props.onScenechangefadedone);\n    this.panorama.on(\"error\", this.props.onError);\n    this.panorama.on(\"errorcleared\", this.props.onErrorcleared);\n    this.panorama.on(\"mousedown\", this.props.onMousedown);\n    this.panorama.on(\"mouseup\", this.props.onMouseup);\n    this.panorama.on(\"touchstart\", this.props.onTouchstart);\n    this.panorama.on(\"touchend\", this.props.onTouchend);\n    \n  };\n\n  componentDidMount = () => {\n    this.renderImage(\"mount\");\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      prevProps.image !== this.props.image ||\n      prevProps.width !== this.props.width ||\n      prevProps.height !== this.props.height ||\n      prevProps.compass !== this.props.compass ||\n      prevProps.title !== this.props.title ||\n      prevProps.author !== this.props.author ||\n      prevProps.preview !== this.props.preview ||\n      prevProps.previewTitle !== this.props.previewTitle ||\n      prevProps.previewAuthor !== this.props.previewAuthor ||\n      prevProps.showZoomCtrl !== this.props.showZoomCtrl ||\n      prevProps.showFullscreenCtrl !== this.props.showFullscreenCtrl ||\n      prevProps.showControls !== this.props.showControls ||\n      prevProps.children.length !== this.props.children.length\n    ) {\n      this.renderImage(\"update\");\n    }\n    if (prevProps.maxYaw !== this.props.maxYaw ||\n      prevProps.minYaw !== this.props.minYaw ||\n      prevProps.maxPitch !== this.props.maxPitch ||\n      prevProps.minPitch !== this.props.minPitch ||\n      prevProps.maxHfov !== this.props.maxHfov ||\n      prevProps.minHfov !== this.props.minHfov){\n      this.panorama.setYawBounds([this.props.minYaw,this.props.maxYaw]);\n      this.panorama.setPitchBounds([this.props.minPitch,this.props.maxPitch]);\n      this.panorama.setHfovBounds([this.props.minHfov,this.props.maxHfov]);\n    }\n    if (prevProps.yaw !== this.props.yaw) {\n      this.panorama.setYaw(this.props.yaw);\n    }\n    if (prevProps.pitch !== this.props.pitch) {\n      this.panorama.setPitch(this.props.pitch);\n    }\n    if (prevProps.hfov !== this.props.hfov) {\n      this.panorama.setHfov(this.props.hfov);\n    }\n  }\n\n  handleClickHotspot = (e, args) => {\n    console.log(\"hotspot clicked\", args.name);\n  };\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement(\"div\");\n    hDiv.classList.add(\"hotspot\");\n    const outDiv = document.createElement(\"div\");\n    outDiv.classList.add(\"out\");\n    const inDiv = document.createElement(\"div\");\n    inDiv.classList.add(\"in\");\n    const imageDiv = document.createElement(\"div\");\n    imageDiv.classList.add(\"image\");\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  };\n\n  getViewer = () => {\n    return this.panorama;\n  };\n\n  forceRender = () => {\n    this.renderImage(\"update\");\n  };\n\n  render() {\n    let { width, height } = this.props;\n    let divStyle = {\n      width: width,\n      height: height\n    };\n    return (\n      <div\n        id={this.props.id ? this.props.id : this.state.id}\n        style={divStyle}\n        ref={node => (this.imageNode = node)}\n      />\n    );\n  }\n}\nPannellum.Hotspot = () => {};\nPannellum.Hotspot = () => {};\nexport default Pannellum;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/Pannellum.js","import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport videojs from 'video.js';\nimport '../pannellum/css/video-js.css';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/videojs-pannellum-plugin';\n\n\nclass PannellumVideo extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    video: propTypes.string,\n    yaw : propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    hotspotDebug: propTypes.bool,\n    autoRotate: propTypes.number,\n    mouseZoom: propTypes.bool,\n    loop:propTypes.bool,\n    autoplay:propTypes.bool,\n    controls:propTypes.bool,\n    muted:propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick:propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n  }\n\n  static defaultProps = {\n    children:[],\n    width: '100%',\n    height: '400px',\n    video:'',\n    yaw : 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    hotspotDebug: false,\n    autoRotate: 0,\n    mouseZoom: true,\n    loop:false,\n    autoplay:true,\n    controls:false,\n    muted: true\n  }\n\n  renderVideo = (state) =>{\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one \n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)){\n      hotspots.map(hotspot =>{\n        switch (hotspot.props.type){\n\n          case \"info\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"type\":hotspot.props.type,\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"text\":hotspot.props.text ? hotspot.props.text : \"\",\n              \"URL\":hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"cssClass\": hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n              \"createTooltipFunc\": hotspot.props.tooltip ? hotspot.props.tooltip : this.hotspotTooltip,\n              \"createTooltipArgs\": hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n              \"clickHandlerFunc\": hotspot.props.handleClick ? hotspot.props.handleClick : this.handleClickHotspot ,\n              \"clickHandlerArgs\": hotspot.props.handleClickArg ? hotspot.props.handleClickArg : { name:\"test\" },\n            });\n          default:\n            return [];\n        }\n        \n      });\n    }\n\n    if (state === \"update\"){\n      \n      this.video = videojs(this.videoNode);\n      let cuurentHS = [...this.video.pnlmViewer.getConfig().hotSpots];\n      this.video.pnlmViewer.setYaw(this.props.yaw);\n      this.video.pnlmViewer.setPitch(this.props.pitch);\n      this.video.pnlmViewer.setHfov(this.props.hfov);\n      this.video.pnlmViewer.setHfovBounds([this.props.minHfov,this.props.maxHfov]);\n      \n      //remove all hotspots\n      cuurentHS.map( hs => this.video.pnlmViewer.removeHotSpot(hs.id));\n      // Adding new hotspots\n      hotspotArray.map( hs => this.video.pnlmViewer.addHotSpot(hs));\n      // setting new video\n      this.video.src({ \n        type: 'video/mp4', \n        src: this.props.video \n      });\n      return this.video.play();\n    } else {\n      this.video = videojs(this.videoNode, {\n        loop:this.props.loop,\n        autoplay:this.props.autoplay,\n        controls:this.props.controls,\n        muted: this.props.muted,\n        plugins: {\n          pannellum: {\n            yaw : this.props.yaw,\n            pitch: this.props.pitch,\n            hfov: this.props.hfov,\n            minHfov: this.props.minHfov,\n            maxHfov: this.props.maxHfov,\n            minPitch: this.props.minPitch,\n            maxPitch: this.props.maxPitch,\n            minYaw: this.props.minYaw,\n            maxYaw: this.props.maxYaw,\n            hotSpotDebug: this.props.hotspotDebug,\n            autoRotate:this.props.autoRotate,\n            mouseZoom:this.props.mouseZoom,\n            hotSpots: hotspotArray\n          }\n        } \n      });\n      this.video.src({ type: 'video/mp4', src: this.props.video });\n      this.video.play();\n    }\n  }\n\n  componentDidMount = () => {\n    this.renderVideo(\"mount\");    \n  }\n\n  componentDidUpdate (prevProps){\n    // videojs(this.videoNode).dispose();\n    // this.videoNode.setAttribute(\"src\", this.props.video );\n    this.renderVideo(\"update\");\n\n\n  }\n\n  handleClickHotspot = (e , args) => {\n    console.log(\"hotspot clicked\" , args.name);\n  }\n\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement('div');\n    hDiv.classList.add('hotspot');\n    const outDiv = document.createElement('div');\n    outDiv.classList.add('out');\n    const inDiv = document.createElement('div');\n    inDiv.classList.add('in');\n    const imageDiv = document.createElement('div');\n    imageDiv.classList.add('image');\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  }\n\n  componentWillUnmount() {\n    videojs(this.videoNode).dispose();\n  }\n  \n  getViewer = () => {\n    return this.video.pnlmViewer;\n  }\n\n  render() {\n    let { width, height, video } = this.props;\n    let divStyle = {\n      width : width,\n      height : height\n    };\n    return (\n\n      <div data-vjs-player>\n        <video\n          id={this.props.id ? this.props.id : this.state.id}\n          className=\"video-js vjs-default-skin vjs-big-play-centered\" \n          ref={node => this.videoNode = node}\n          preload=\"none\" \n          crossOrigin=\"anonymous\"\n          style={divStyle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PannellumVideo;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/PannellumVideo.js","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = 22\n// module chunks = 0","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = 24\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 25\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = 26\n// module chunks = 0","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = 27\n// module chunks = 0","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trim/index.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-callable/index.js\n// module id = 30\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = 33\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = 34\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = 35\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = 36\n// module chunks = 0","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    }\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * @file m3u8/parse-stream.js\n */\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0;\n\n    // strip whitespace\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    }\n\n    // URIs\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    }\n\n    // Comments\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    }\n\n    // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n    line = line.replace('\\r', '');\n\n    // Tags\n    match = /^#EXTM3U/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n      if (match[2]) {\n        event.title = match[2];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n          event.attributes.RESOLUTION = resolution;\n        }\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ENDLIST/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        // parse the IV string into a Uint32Array\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n\n    // unknown tag type\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * @file m3u8/parser.js\n */\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data;\n            // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/dist/m3u8-parser.es.js\n// module id = 37\n// module chunks = 0","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = 38\n// module chunks = 0","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = 39\n// module chunks = 0","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/index.js\n// module id = 40\n// module chunks = 0","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/frame-utils.js\n// module id = 41\n// module chunks = 0","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/track-decode-info.js\n// module id = 42\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/m2ts.js\n// module id = 43\n// module chunks = 0","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/metadata-stream.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/adts.js\n// module id = 45\n// module chunks = 0","'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/h264.js\n// module id = 46\n// module chunks = 0","'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/exp-golomb.js\n// module id = 47\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.parseId3TagSize = function(header, byteIndex) {\n    var\n      returnSize = (header[byteIndex + 6] << 21) |\n                   (header[byteIndex + 7] << 14) |\n                   (header[byteIndex + 8] << 7) |\n                   (header[byteIndex + 9]),\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n\n  this.parseAdtsSize = function(header, byteIndex) {\n    var\n      lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n    return (highTwo | middle) | lowThree;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = this.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = this.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/index.js\n// module id = 48\n// module chunks = 0","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/data/silence.js\n// module id = 49\n// module chunks = 0","var\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/clock.js\n// module id = 50\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/caption-parser.js\n// module id = 51\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/mp4-inspector.js\n// module id = 52\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 53\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = 54\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/probe.js\n// module id = 55\n// module chunks = 0","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/dist/aes-decrypter.es.js\n// module id = 56\n// module chunks = 0","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/dist/pkcs7.es.js\n// module id = 57\n// module chunks = 0","/*\n * Video.js plugin for Pannellum\n * Copyright (c) 2015-2018 Matthew Petroff\n * MIT License\n */\nimport videojs from 'video.js'\n\n(function(document, videojs, pannellum) {\n    'use strict';\n    \n    videojs.registerPlugin('pannellum', function(config) {\n        // Create Pannellum instance\n        var player = this;\n        var container = player.el();\n        var vid = container.getElementsByTagName('video')[0],\n            pnlmContainer = document.createElement('div');\n        config = config || {};\n        config.type = 'equirectangular';\n        config.dynamic = true;\n        config.showZoomCtrl = false;\n        config.showFullscreenCtrl = false;\n        config.autoLoad = true;\n        config.panorama = vid;\n        pnlmContainer.style.visibility = 'hidden';\n        player.pnlmViewer = pannellum.viewer(pnlmContainer, config);\n        container.insertBefore(pnlmContainer, container.firstChild);\n        vid.style.display = 'none';\n    \n        // Handle update settings\n        player.on('play', function() {\n            if (vid.readyState > 1)\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('canplay', function() {\n            if (!player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('pause', function() {\n            player.pnlmViewer.setUpdate(false);\n        });\n        player.on('loadeddata', function() {\n            pnlmContainer.style.visibility = 'visible';\n        });\n        player.on('seeking', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('seeked', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(false);\n        });\n    });\n    \n    })(document, videojs, pannellum);\n    \n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/videojs-pannellum-plugin.js"],"sourceRoot":""}